// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class VEscortForOpEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.VEscortForOp",
                typeof(VEscortForOp),
                baseEntityType,
                propertyCount: 16);

            var company = runtimeEntityType.AddProperty(
                "Company",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("Company", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<Company>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 150);
            company.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var currentStatus = runtimeEntityType.AddProperty(
                "CurrentStatus",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("CurrentStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<CurrentStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            currentStatus.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var employeeName = runtimeEntityType.AddProperty(
                "EmployeeName",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("EmployeeName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<EmployeeName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 101);
            employeeName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var escortDateFrom = runtimeEntityType.AddProperty(
                "EscortDateFrom",
                typeof(DateTime?),
                propertyInfo: typeof(VEscortForOp).GetProperty("EscortDateFrom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<EscortDateFrom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            escortDateFrom.AddAnnotation("Relational:ColumnType", "datetime");
            escortDateFrom.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var escortDateTo = runtimeEntityType.AddProperty(
                "EscortDateTo",
                typeof(DateTime?),
                propertyInfo: typeof(VEscortForOp).GetProperty("EscortDateTo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<EscortDateTo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            escortDateTo.AddAnnotation("Relational:ColumnType", "datetime");
            escortDateTo.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var escortMissionId = runtimeEntityType.AddProperty(
                "EscortMissionId",
                typeof(long?),
                propertyInfo: typeof(VEscortForOp).GetProperty("EscortMissionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<EscortMissionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            escortMissionId.AddAnnotation("Relational:ColumnName", "EscortMissionID");
            escortMissionId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var escortMissionPatrolId = runtimeEntityType.AddProperty(
                "EscortMissionPatrolId",
                typeof(long?),
                propertyInfo: typeof(VEscortForOp).GetProperty("EscortMissionPatrolId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<EscortMissionPatrolId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            escortMissionPatrolId.AddAnnotation("Relational:ColumnName", "EscortMissionPatrolID");
            escortMissionPatrolId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var locationFrom = runtimeEntityType.AddProperty(
                "LocationFrom",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("LocationFrom", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<LocationFrom>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 150);
            locationFrom.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var locationTo = runtimeEntityType.AddProperty(
                "LocationTo",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("LocationTo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<LocationTo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 150);
            locationTo.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var missionDate = runtimeEntityType.AddProperty(
                "MissionDate",
                typeof(DateTime?),
                propertyInfo: typeof(VEscortForOp).GetProperty("MissionDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<MissionDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            missionDate.AddAnnotation("Relational:ColumnType", "datetime");
            missionDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var notes = runtimeEntityType.AddProperty(
                "Notes",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("Notes", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<Notes>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 4000);
            notes.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var numberOfPatrols = runtimeEntityType.AddProperty(
                "NumberOfPatrols",
                typeof(int?),
                propertyInfo: typeof(VEscortForOp).GetProperty("NumberOfPatrols", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<NumberOfPatrols>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            numberOfPatrols.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var patrol = runtimeEntityType.AddProperty(
                "Patrol",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("Patrol", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<Patrol>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            patrol.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var patrolId = runtimeEntityType.AddProperty(
                "PatrolId",
                typeof(long?),
                propertyInfo: typeof(VEscortForOp).GetProperty("PatrolId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<PatrolId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            patrolId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rejectionReason = runtimeEntityType.AddProperty(
                "RejectionReason",
                typeof(string),
                propertyInfo: typeof(VEscortForOp).GetProperty("RejectionReason", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<RejectionReason>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            rejectionReason.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var requestNumber = runtimeEntityType.AddProperty(
                "RequestNumber",
                typeof(long),
                propertyInfo: typeof(VEscortForOp).GetProperty("RequestNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VEscortForOp).GetField("<RequestNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            requestNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "V_EscortForOp");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
