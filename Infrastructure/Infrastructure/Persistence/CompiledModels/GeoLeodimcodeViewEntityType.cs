// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class GeoLeodimcodeViewEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.GeoLeodimcodeView",
                typeof(GeoLeodimcodeView),
                baseEntityType,
                propertyCount: 8);

            var geoLeobeat = runtimeEntityType.AddProperty(
                "GeoLeobeat",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("GeoLeobeat", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<GeoLeobeat>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            geoLeobeat.AddAnnotation("Relational:ColumnName", "GeoLEOBeat");
            geoLeobeat.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var geoLeocode = runtimeEntityType.AddProperty(
                "GeoLeocode",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("GeoLeocode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<GeoLeocode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 50);
            geoLeocode.AddAnnotation("Relational:ColumnName", "GeoLEOCode");
            geoLeocode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var geoLeodescription = runtimeEntityType.AddProperty(
                "GeoLeodescription",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("GeoLeodescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<GeoLeodescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            geoLeodescription.AddAnnotation("Relational:ColumnName", "GeoLEODescription");
            geoLeodescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var geoLeodistrict = runtimeEntityType.AddProperty(
                "GeoLeodistrict",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("GeoLeodistrict", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<GeoLeodistrict>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            geoLeodistrict.AddAnnotation("Relational:ColumnName", "GeoLEODistrict");
            geoLeodistrict.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var geoLeodivision = runtimeEntityType.AddProperty(
                "GeoLeodivision",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("GeoLeodivision", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<GeoLeodivision>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            geoLeodivision.AddAnnotation("Relational:ColumnName", "GeoLEODivision");
            geoLeodivision.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var geoLeosector = runtimeEntityType.AddProperty(
                "GeoLeosector",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("GeoLeosector", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<GeoLeosector>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            geoLeosector.AddAnnotation("Relational:ColumnName", "GeoLEOSector");
            geoLeosector.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isShown = runtimeEntityType.AddProperty(
                "IsShown",
                typeof(bool?),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("IsShown", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<IsShown>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isShown.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rowStatusCode = runtimeEntityType.AddProperty(
                "RowStatusCode",
                typeof(string),
                propertyInfo: typeof(GeoLeodimcodeView).GetProperty("RowStatusCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(GeoLeodimcodeView).GetField("<RowStatusCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            rowStatusCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "GeoLEODIMCodeView");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
