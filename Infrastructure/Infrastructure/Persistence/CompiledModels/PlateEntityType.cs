// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class PlateEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.Plate",
                typeof(Plate),
                baseEntityType,
                propertyCount: 13);

            var f13 = runtimeEntityType.AddProperty(
                "F13",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("F13", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<F13>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            f13.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateCategoryArabicDescription = runtimeEntityType.AddProperty(
                "PlateCategoryArabicDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateCategoryArabicDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateCategoryArabicDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateCategoryArabicDescription.AddAnnotation("Relational:ColumnName", "Plate Category Arabic Description");
            plateCategoryArabicDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateCategoryCode = runtimeEntityType.AddProperty(
                "PlateCategoryCode",
                typeof(double?),
                propertyInfo: typeof(Plate).GetProperty("PlateCategoryCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateCategoryCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            plateCategoryCode.AddAnnotation("Relational:ColumnName", "Plate Category Code");
            plateCategoryCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateCategoryEnglishDescription = runtimeEntityType.AddProperty(
                "PlateCategoryEnglishDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateCategoryEnglishDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateCategoryEnglishDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateCategoryEnglishDescription.AddAnnotation("Relational:ColumnName", "Plate Category English Description");
            plateCategoryEnglishDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateColorArabicDescription = runtimeEntityType.AddProperty(
                "PlateColorArabicDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateColorArabicDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateColorArabicDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateColorArabicDescription.AddAnnotation("Relational:ColumnName", "Plate Color Arabic Description");
            plateColorArabicDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateColorCode = runtimeEntityType.AddProperty(
                "PlateColorCode",
                typeof(double?),
                propertyInfo: typeof(Plate).GetProperty("PlateColorCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateColorCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            plateColorCode.AddAnnotation("Relational:ColumnName", "Plate Color Code");
            plateColorCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateColorEnglishDescription = runtimeEntityType.AddProperty(
                "PlateColorEnglishDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateColorEnglishDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateColorEnglishDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateColorEnglishDescription.AddAnnotation("Relational:ColumnName", "Plate Color English Description");
            plateColorEnglishDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateSourceArabicDescription = runtimeEntityType.AddProperty(
                "PlateSourceArabicDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateSourceArabicDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateSourceArabicDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateSourceArabicDescription.AddAnnotation("Relational:ColumnName", "Plate Source Arabic Description");
            plateSourceArabicDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateSourceCode = runtimeEntityType.AddProperty(
                "PlateSourceCode",
                typeof(double?),
                propertyInfo: typeof(Plate).GetProperty("PlateSourceCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateSourceCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            plateSourceCode.AddAnnotation("Relational:ColumnName", "Plate Source Code");
            plateSourceCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateSourceEnglishDescription = runtimeEntityType.AddProperty(
                "PlateSourceEnglishDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateSourceEnglishDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateSourceEnglishDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateSourceEnglishDescription.AddAnnotation("Relational:ColumnName", "Plate Source English Description");
            plateSourceEnglishDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateTypeArabicDescription = runtimeEntityType.AddProperty(
                "PlateTypeArabicDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateTypeArabicDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateTypeArabicDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateTypeArabicDescription.AddAnnotation("Relational:ColumnName", "Plate Type Arabic Description");
            plateTypeArabicDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateTypeCode = runtimeEntityType.AddProperty(
                "PlateTypeCode",
                typeof(double?),
                propertyInfo: typeof(Plate).GetProperty("PlateTypeCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateTypeCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            plateTypeCode.AddAnnotation("Relational:ColumnName", "Plate Type Code");
            plateTypeCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateTypeEnglishDescription = runtimeEntityType.AddProperty(
                "PlateTypeEnglishDescription",
                typeof(string),
                propertyInfo: typeof(Plate).GetProperty("PlateTypeEnglishDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Plate).GetField("<PlateTypeEnglishDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            plateTypeEnglishDescription.AddAnnotation("Relational:ColumnName", "Plate Type English Description");
            plateTypeEnglishDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "Plate$");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
