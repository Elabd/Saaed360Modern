// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class EventsPersonJobTypeDimEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.EventsPersonJobTypeDim",
                typeof(EventsPersonJobTypeDim),
                baseEntityType,
                propertyCount: 3,
                navigationCount: 1,
                keyCount: 1);

            var eventsPersonJobTypeId = runtimeEntityType.AddProperty(
                "EventsPersonJobTypeId",
                typeof(int),
                propertyInfo: typeof(EventsPersonJobTypeDim).GetProperty("EventsPersonJobTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsPersonJobTypeDim).GetField("<EventsPersonJobTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0);
            eventsPersonJobTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var descriptionAr = runtimeEntityType.AddProperty(
                "DescriptionAr",
                typeof(string),
                propertyInfo: typeof(EventsPersonJobTypeDim).GetProperty("DescriptionAr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsPersonJobTypeDim).GetField("<DescriptionAr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 200);
            descriptionAr.AddAnnotation("Relational:ColumnName", "Description_Ar");
            descriptionAr.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var descriptionEn = runtimeEntityType.AddProperty(
                "DescriptionEn",
                typeof(string),
                propertyInfo: typeof(EventsPersonJobTypeDim).GetProperty("DescriptionEn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsPersonJobTypeDim).GetField("<DescriptionEn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 200);
            descriptionEn.AddAnnotation("Relational:ColumnName", "Description_En");
            descriptionEn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { eventsPersonJobTypeId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK_EventsPersonJobType");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "EventsPersonJobTypeDim");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
