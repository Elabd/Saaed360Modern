// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class BoloEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.Bolo",
                typeof(Bolo),
                baseEntityType,
                propertyCount: 6,
                navigationCount: 3,
                foreignKeyCount: 3,
                unnamedIndexCount: 2,
                keyCount: 1);

            var activityId = runtimeEntityType.AddProperty(
                "ActivityId",
                typeof(long),
                propertyInfo: typeof(Bolo).GetProperty("ActivityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<ActivityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            activityId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var boloCategoryId = runtimeEntityType.AddProperty(
                "BoloCategoryId",
                typeof(int?),
                propertyInfo: typeof(Bolo).GetProperty("BoloCategoryId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<BoloCategoryId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            boloCategoryId.AddAnnotation("Relational:DefaultValue", 1);
            boloCategoryId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var enteredDateTime = runtimeEntityType.AddProperty(
                "EnteredDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(Bolo).GetProperty("EnteredDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<EnteredDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            enteredDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            enteredDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var expirationDateTime = runtimeEntityType.AddProperty(
                "ExpirationDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(Bolo).GetProperty("ExpirationDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<ExpirationDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            expirationDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            expirationDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var information = runtimeEntityType.AddProperty(
                "Information",
                typeof(string),
                propertyInfo: typeof(Bolo).GetProperty("Information", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<Information>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            information.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var priorityHighLowId = runtimeEntityType.AddProperty(
                "PriorityHighLowId",
                typeof(int?),
                propertyInfo: typeof(Bolo).GetProperty("PriorityHighLowId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<PriorityHighLowId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            priorityHighLowId.AddAnnotation("Relational:DefaultValue", 1);
            priorityHighLowId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { activityId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__Bolo__45F4A791FE100E39");

            var index = runtimeEntityType.AddIndex(
                new[] { boloCategoryId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { priorityHighLowId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("ActivityId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("ActivityId") }),
                principalEntityType,
                unique: true,
                required: true);

            var activity = declaringEntityType.AddNavigation("Activity",
                runtimeForeignKey,
                onDependent: true,
                typeof(Activity),
                propertyInfo: typeof(Bolo).GetProperty("Activity", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<Activity>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var bolo = principalEntityType.AddNavigation("Bolo",
                runtimeForeignKey,
                onDependent: false,
                typeof(Bolo),
                propertyInfo: typeof(Activity).GetProperty("Bolo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Activity).GetField("<Bolo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_Bolo_Activity");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("BoloCategoryId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("BoloCategoryId") }),
                principalEntityType);

            var boloCategory = declaringEntityType.AddNavigation("BoloCategory",
                runtimeForeignKey,
                onDependent: true,
                typeof(BoloCategoryDim),
                propertyInfo: typeof(Bolo).GetProperty("BoloCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<BoloCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var bolos = principalEntityType.AddNavigation("Bolos",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Bolo>),
                propertyInfo: typeof(BoloCategoryDim).GetProperty("Bolos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(BoloCategoryDim).GetField("<Bolos>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_Bolo_BoloCategoryDIM");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey3(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("PriorityHighLowId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("HighLowId") }),
                principalEntityType);

            var priorityHighLow = declaringEntityType.AddNavigation("PriorityHighLow",
                runtimeForeignKey,
                onDependent: true,
                typeof(HighLowDim),
                propertyInfo: typeof(Bolo).GetProperty("PriorityHighLow", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Bolo).GetField("<PriorityHighLow>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var bolos = principalEntityType.AddNavigation("Bolos",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Bolo>),
                propertyInfo: typeof(HighLowDim).GetProperty("Bolos", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(HighLowDim).GetField("<Bolos>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_Bolo_HighLowDIM");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "Bolo");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
