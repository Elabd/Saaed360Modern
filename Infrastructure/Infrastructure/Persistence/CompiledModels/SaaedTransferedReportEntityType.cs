// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class SaaedTransferedReportEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.SaaedTransferedReport",
                typeof(SaaedTransferedReport),
                baseEntityType,
                propertyCount: 28);

            var activityDescription = runtimeEntityType.AddProperty(
                "ActivityDescription",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ActivityDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ActivityDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            activityDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var activityId = runtimeEntityType.AddProperty(
                "ActivityId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ActivityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ActivityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            activityId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var childId = runtimeEntityType.AddProperty(
                "ChildId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ChildId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ChildId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            childId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var childs = runtimeEntityType.AddProperty(
                "Childs",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("Childs", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<Childs>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                unicode: false);
            childs.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cityId = runtimeEntityType.AddProperty(
                "CityId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("CityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<CityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            cityId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var closedTransfer = runtimeEntityType.AddProperty(
                "ClosedTransfer",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ClosedTransfer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ClosedTransfer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            closedTransfer.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var closedTransferDescription = runtimeEntityType.AddProperty(
                "ClosedTransferDescription",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ClosedTransferDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ClosedTransferDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            closedTransferDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var emirateId = runtimeEntityType.AddProperty(
                "EmirateId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("EmirateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<EmirateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            emirateId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var firstOrgDescription = runtimeEntityType.AddProperty(
                "FirstOrgDescription",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("FirstOrgDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<FirstOrgDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            firstOrgDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var firstTransferActivityId = runtimeEntityType.AddProperty(
                "FirstTransferActivityId",
                typeof(long),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("FirstTransferActivityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<FirstTransferActivityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            firstTransferActivityId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var firstTransferDescription = runtimeEntityType.AddProperty(
                "FirstTransferDescription",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("FirstTransferDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<FirstTransferDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            firstTransferDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var firstTransferOrgId = runtimeEntityType.AddProperty(
                "FirstTransferOrgId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("FirstTransferOrgId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<FirstTransferOrgId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            firstTransferOrgId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var firstTransferOrganizationName = runtimeEntityType.AddProperty(
                "FirstTransferOrganizationName",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("FirstTransferOrganizationName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<FirstTransferOrganizationName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            firstTransferOrganizationName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var firstTransferReason = runtimeEntityType.AddProperty(
                "FirstTransferReason",
                typeof(int),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("FirstTransferReason", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<FirstTransferReason>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            firstTransferReason.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentid = runtimeEntityType.AddProperty(
                "Incidentid",
                typeof(long),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("Incidentid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<Incidentid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            incidentid.AddAnnotation("Relational:ColumnName", "incidentid");
            incidentid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lastOrgDescription = runtimeEntityType.AddProperty(
                "LastOrgDescription",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("LastOrgDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<LastOrgDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            lastOrgDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lastTransferOrgId = runtimeEntityType.AddProperty(
                "LastTransferOrgId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("LastTransferOrgId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<LastTransferOrgId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            lastTransferOrgId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lastTransferOrganizationName = runtimeEntityType.AddProperty(
                "LastTransferOrganizationName",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("LastTransferOrganizationName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<LastTransferOrganizationName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            lastTransferOrganizationName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var parentId = runtimeEntityType.AddProperty(
                "ParentId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ParentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ParentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            parentId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reasonIdLast = runtimeEntityType.AddProperty(
                "ReasonIdLast",
                typeof(int?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ReasonIdLast", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ReasonIdLast>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reasonIdLast.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reasonName = runtimeEntityType.AddProperty(
                "ReasonName",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ReasonName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ReasonName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            reasonName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reasonNameLast = runtimeEntityType.AddProperty(
                "ReasonNameLast",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ReasonNameLast", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ReasonNameLast>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            reasonNameLast.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var regionId = runtimeEntityType.AddProperty(
                "RegionId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("RegionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<RegionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            regionId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportDateTime = runtimeEntityType.AddProperty(
                "ReportDateTime",
                typeof(DateTime),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ReportDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ReportDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));
            reportDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            reportDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportId = runtimeEntityType.AddProperty(
                "ReportId",
                typeof(int?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ReportId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ReportId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reportId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportNumber = runtimeEntityType.AddProperty(
                "ReportNumber",
                typeof(string),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("ReportNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<ReportNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            reportNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sectorId = runtimeEntityType.AddProperty(
                "SectorId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("SectorId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<SectorId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sectorId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var streetId = runtimeEntityType.AddProperty(
                "StreetId",
                typeof(long?),
                propertyInfo: typeof(SaaedTransferedReport).GetProperty("StreetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedTransferedReport).GetField("<StreetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            streetId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "SaaedTransferedReport");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
