// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class MobileRequestSurveryAnswersDimEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.MobileRequestSurveryAnswersDim",
                typeof(MobileRequestSurveryAnswersDim),
                baseEntityType,
                propertyCount: 3,
                navigationCount: 2,
                foreignKeyCount: 1,
                unnamedIndexCount: 1,
                keyCount: 1);

            var mobileRequestSurveyAnswerId = runtimeEntityType.AddProperty(
                "MobileRequestSurveyAnswerId",
                typeof(int),
                propertyInfo: typeof(MobileRequestSurveryAnswersDim).GetProperty("MobileRequestSurveyAnswerId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurveryAnswersDim).GetField("<MobileRequestSurveyAnswerId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0);
            mobileRequestSurveyAnswerId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mobileRequestLookupId = runtimeEntityType.AddProperty(
                "MobileRequestLookupId",
                typeof(int),
                propertyInfo: typeof(MobileRequestSurveryAnswersDim).GetProperty("MobileRequestLookupId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurveryAnswersDim).GetField("<MobileRequestLookupId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            mobileRequestLookupId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mobileRequestQuestionId = runtimeEntityType.AddProperty(
                "MobileRequestQuestionId",
                typeof(int),
                propertyInfo: typeof(MobileRequestSurveryAnswersDim).GetProperty("MobileRequestQuestionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurveryAnswersDim).GetField("<MobileRequestQuestionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            mobileRequestQuestionId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { mobileRequestSurveyAnswerId });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { mobileRequestQuestionId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MobileRequestQuestionId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MobileRequestSurveyQuestionId") }),
                principalEntityType,
                required: true);

            var mobileRequestQuestion = declaringEntityType.AddNavigation("MobileRequestQuestion",
                runtimeForeignKey,
                onDependent: true,
                typeof(MobileRequestSurveyQuestion),
                propertyInfo: typeof(MobileRequestSurveryAnswersDim).GetProperty("MobileRequestQuestion", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurveryAnswersDim).GetField("<MobileRequestQuestion>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var mobileRequestSurveryAnswersDims = principalEntityType.AddNavigation("MobileRequestSurveryAnswersDims",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<MobileRequestSurveryAnswersDim>),
                propertyInfo: typeof(MobileRequestSurveyQuestion).GetProperty("MobileRequestSurveryAnswersDims", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurveyQuestion).GetField("<MobileRequestSurveryAnswersDims>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_MobileRequestSurveryAnswersDim_MobileRequestSurveyQuestions");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "MobileRequestSurveryAnswersDim");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
