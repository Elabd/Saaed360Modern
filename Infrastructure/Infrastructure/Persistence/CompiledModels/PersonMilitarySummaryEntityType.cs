// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class PersonMilitarySummaryEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.PersonMilitarySummary",
                typeof(PersonMilitarySummary),
                baseEntityType,
                propertyCount: 16,
                navigationCount: 7,
                foreignKeyCount: 7,
                unnamedIndexCount: 7,
                keyCount: 1);

            var personMilitarySummaryId = runtimeEntityType.AddProperty(
                "PersonMilitarySummaryId",
                typeof(long),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("PersonMilitarySummaryId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<PersonMilitarySummaryId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            personMilitarySummaryId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var createDateTimeStamp = runtimeEntityType.AddProperty(
                "CreateDateTimeStamp",
                typeof(DateTime?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("CreateDateTimeStamp", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<CreateDateTimeStamp>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            createDateTimeStamp.AddAnnotation("Relational:ColumnType", "datetime");
            createDateTimeStamp.AddAnnotation("Relational:DefaultValueSql", "(getdate())");
            createDateTimeStamp.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isDeleted = runtimeEntityType.AddProperty(
                "IsDeleted",
                typeof(bool?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("IsDeleted", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<IsDeleted>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            isDeleted.AddAnnotation("Relational:DefaultValue", false);
            isDeleted.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var militaryBranchId = runtimeEntityType.AddProperty(
                "MilitaryBranchId",
                typeof(int?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryBranchId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryBranchId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            militaryBranchId.AddAnnotation("Relational:DefaultValue", 1);
            militaryBranchId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var militaryDischargeTypeId = runtimeEntityType.AddProperty(
                "MilitaryDischargeTypeId",
                typeof(int?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryDischargeTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryDischargeTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            militaryDischargeTypeId.AddAnnotation("Relational:DefaultValue", 1);
            militaryDischargeTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var militaryServiceTypeId = runtimeEntityType.AddProperty(
                "MilitaryServiceTypeId",
                typeof(int?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryServiceTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryServiceTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            militaryServiceTypeId.AddAnnotation("Relational:DefaultValue", 1);
            militaryServiceTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var militaryStatusId = runtimeEntityType.AddProperty(
                "MilitaryStatusId",
                typeof(int?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryStatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryStatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            militaryStatusId.AddAnnotation("Relational:DefaultValue", 1);
            militaryStatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var modifiedDateTimeStamp = runtimeEntityType.AddProperty(
                "ModifiedDateTimeStamp",
                typeof(DateTime?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("ModifiedDateTimeStamp", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<ModifiedDateTimeStamp>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            modifiedDateTimeStamp.AddAnnotation("Relational:ColumnType", "datetime");
            modifiedDateTimeStamp.AddAnnotation("Relational:DefaultValueSql", "(getdate())");
            modifiedDateTimeStamp.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var personGuid = runtimeEntityType.AddProperty(
                "PersonGuid",
                typeof(Guid),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("PersonGuid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<PersonGuid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new Guid("00000000-0000-0000-0000-000000000000"));
            personGuid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var personId = runtimeEntityType.AddProperty(
                "PersonId",
                typeof(long),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("PersonId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<PersonId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            personId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var personMilitarySummaryDescription = runtimeEntityType.AddProperty(
                "PersonMilitarySummaryDescription",
                typeof(string),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("PersonMilitarySummaryDescription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<PersonMilitarySummaryDescription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 300);
            personMilitarySummaryDescription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var personMilitarySummaryGuid = runtimeEntityType.AddProperty(
                "PersonMilitarySummaryGuid",
                typeof(Guid),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("PersonMilitarySummaryGuid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<PersonMilitarySummaryGuid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                sentinel: new Guid("00000000-0000-0000-0000-000000000000"));
            personMilitarySummaryGuid.AddAnnotation("Relational:DefaultValueSql", "(newid())");
            personMilitarySummaryGuid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rowStatusId = runtimeEntityType.AddProperty(
                "RowStatusId",
                typeof(int?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("RowStatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<RowStatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            rowStatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var serviceEnd = runtimeEntityType.AddProperty(
                "ServiceEnd",
                typeof(DateTime?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("ServiceEnd", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<ServiceEnd>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            serviceEnd.AddAnnotation("Relational:ColumnType", "datetime");
            serviceEnd.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var serviceStart = runtimeEntityType.AddProperty(
                "ServiceStart",
                typeof(DateTime?),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("ServiceStart", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<ServiceStart>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            serviceStart.AddAnnotation("Relational:ColumnType", "datetime");
            serviceStart.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sourceId = runtimeEntityType.AddProperty(
                "SourceId",
                typeof(long),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("SourceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<SourceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            sourceId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { personMilitarySummaryId });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { militaryBranchId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { militaryDischargeTypeId });

            var index1 = runtimeEntityType.AddIndex(
                new[] { militaryServiceTypeId });

            var index2 = runtimeEntityType.AddIndex(
                new[] { militaryStatusId });

            var index3 = runtimeEntityType.AddIndex(
                new[] { personId });

            var index4 = runtimeEntityType.AddIndex(
                new[] { rowStatusId });

            var index5 = runtimeEntityType.AddIndex(
                new[] { sourceId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MilitaryBranchId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MilitaryBranchId") }),
                principalEntityType);

            var militaryBranch = declaringEntityType.AddNavigation("MilitaryBranch",
                runtimeForeignKey,
                onDependent: true,
                typeof(MilitaryBranchDim),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryBranch", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryBranch>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(MilitaryBranchDim).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MilitaryBranchDim).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_MilitaryBranchDIM");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MilitaryDischargeTypeId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MilitaryDischargeTypeId") }),
                principalEntityType);

            var militaryDischargeType = declaringEntityType.AddNavigation("MilitaryDischargeType",
                runtimeForeignKey,
                onDependent: true,
                typeof(MilitaryDischargeTypeDim),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryDischargeType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryDischargeType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(MilitaryDischargeTypeDim).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MilitaryDischargeTypeDim).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_MilitaryDischargeTypeDIM");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey3(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MilitaryServiceTypeId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MilitaryServiceTypeId") }),
                principalEntityType);

            var militaryServiceType = declaringEntityType.AddNavigation("MilitaryServiceType",
                runtimeForeignKey,
                onDependent: true,
                typeof(MilitaryServiceTypeDim),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryServiceType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryServiceType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(MilitaryServiceTypeDim).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MilitaryServiceTypeDim).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_MilitaryServiceTypeDIM");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey4(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MilitaryStatusId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MilitaryStatusId") }),
                principalEntityType);

            var militaryStatus = declaringEntityType.AddNavigation("MilitaryStatus",
                runtimeForeignKey,
                onDependent: true,
                typeof(MilitaryStatusDim),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("MilitaryStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<MilitaryStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(MilitaryStatusDim).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MilitaryStatusDim).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_MilitaryStatusDIM");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey5(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("PersonId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("PersonId") }),
                principalEntityType,
                required: true);

            var person = declaringEntityType.AddNavigation("Person",
                runtimeForeignKey,
                onDependent: true,
                typeof(Person),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("Person", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<Person>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(Person).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Person).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_Person");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey6(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("RowStatusId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("RowStatusId") }),
                principalEntityType);

            var rowStatus = declaringEntityType.AddNavigation("RowStatus",
                runtimeForeignKey,
                onDependent: true,
                typeof(RowStatusDim),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("RowStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<RowStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(RowStatusDim).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RowStatusDim).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_RowStatusDIM");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey7(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("SourceId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("SourceId") }),
                principalEntityType,
                required: true);

            var source = declaringEntityType.AddNavigation("Source",
                runtimeForeignKey,
                onDependent: true,
                typeof(Source),
                propertyInfo: typeof(PersonMilitarySummary).GetProperty("Source", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PersonMilitarySummary).GetField("<Source>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var personMilitarySummaries = principalEntityType.AddNavigation("PersonMilitarySummaries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<PersonMilitarySummary>),
                propertyInfo: typeof(Source).GetProperty("PersonMilitarySummaries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Source).GetField("<PersonMilitarySummaries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_PersonMilitarySummary_Source");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PersonMilitarySummary");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
