// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class VwTransportersSaaedEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.VwTransportersSaaed",
                typeof(VwTransportersSaaed),
                baseEntityType,
                propertyCount: 18);

            var branchId = runtimeEntityType.AddProperty(
                "BranchId",
                typeof(Guid?),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("BranchId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<BranchId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            branchId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var branchName = runtimeEntityType.AddProperty(
                "BranchName",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("BranchName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<BranchName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            branchName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var category = runtimeEntityType.AddProperty(
                "Category",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("Category", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<Category>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            category.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var chassisNumber = runtimeEntityType.AddProperty(
                "ChassisNumber",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("ChassisNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<ChassisNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            chassisNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var code = runtimeEntityType.AddProperty(
                "Code",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("Code", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<Code>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            code.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var currentMileage = runtimeEntityType.AddProperty(
                "CurrentMileage",
                typeof(double?),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("CurrentMileage", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<CurrentMileage>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            currentMileage.AddAnnotation("Relational:ColumnName", "currentMileage");
            currentMileage.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var fullPlateNumber = runtimeEntityType.AddProperty(
                "FullPlateNumber",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("FullPlateNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<FullPlateNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            fullPlateNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var parentBranchId = runtimeEntityType.AddProperty(
                "ParentBranchId",
                typeof(Guid?),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("ParentBranchId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<ParentBranchId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            parentBranchId.AddAnnotation("Relational:ColumnName", "parentBranchId");
            parentBranchId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var parentBranchName = runtimeEntityType.AddProperty(
                "ParentBranchName",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("ParentBranchName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<ParentBranchName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            parentBranchName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateNoColor = runtimeEntityType.AddProperty(
                "PlateNoColor",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("PlateNoColor", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<PlateNoColor>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            plateNoColor.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateNoNumbers = runtimeEntityType.AddProperty(
                "PlateNoNumbers",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("PlateNoNumbers", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<PlateNoNumbers>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            plateNoNumbers.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var productionYear = runtimeEntityType.AddProperty(
                "ProductionYear",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("ProductionYear", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<ProductionYear>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            productionYear.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var speedLimit = runtimeEntityType.AddProperty(
                "SpeedLimit",
                typeof(double?),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("SpeedLimit", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<SpeedLimit>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            speedLimit.AddAnnotation("Relational:ColumnName", "Speed Limit");
            speedLimit.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var transporterBrand = runtimeEntityType.AddProperty(
                "TransporterBrand",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("TransporterBrand", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<TransporterBrand>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            transporterBrand.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var transporterId = runtimeEntityType.AddProperty(
                "TransporterId",
                typeof(Guid),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("TransporterId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<TransporterId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new Guid("00000000-0000-0000-0000-000000000000"));
            transporterId.AddAnnotation("Relational:ColumnName", "TransporterID");
            transporterId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var transporterModel = runtimeEntityType.AddProperty(
                "TransporterModel",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("TransporterModel", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<TransporterModel>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            transporterModel.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var transporterStatusName = runtimeEntityType.AddProperty(
                "TransporterStatusName",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("TransporterStatusName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<TransporterStatusName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            transporterStatusName.AddAnnotation("Relational:ColumnName", "transporterStatusName");
            transporterStatusName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var type = runtimeEntityType.AddProperty(
                "Type",
                typeof(string),
                propertyInfo: typeof(VwTransportersSaaed).GetProperty("Type", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(VwTransportersSaaed).GetField("<Type>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 500);
            type.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "VW_transporters_Saaed");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
