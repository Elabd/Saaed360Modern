// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class StreetCrossStreetEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.StreetCrossStreet",
                typeof(StreetCrossStreet),
                baseEntityType,
                propertyCount: 3,
                navigationCount: 2,
                foreignKeyCount: 2,
                unnamedIndexCount: 2,
                keyCount: 1);

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(long),
                propertyInfo: typeof(StreetCrossStreet).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(StreetCrossStreet).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            id.AddAnnotation("Relational:ColumnName", "ID");
            id.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var crossStreetId = runtimeEntityType.AddProperty(
                "CrossStreetId",
                typeof(long),
                propertyInfo: typeof(StreetCrossStreet).GetProperty("CrossStreetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(StreetCrossStreet).GetField("<CrossStreetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            crossStreetId.AddAnnotation("Relational:ColumnName", "crossStreetID");
            crossStreetId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var streetId = runtimeEntityType.AddProperty(
                "StreetId",
                typeof(long),
                propertyInfo: typeof(StreetCrossStreet).GetProperty("StreetId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(StreetCrossStreet).GetField("<StreetId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            streetId.AddAnnotation("Relational:ColumnName", "streetID");
            streetId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { id });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__StreetCr__3214EC2740365097");

            var index = runtimeEntityType.AddIndex(
                new[] { crossStreetId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { streetId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("CrossStreetId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("CrossStreetId") }),
                principalEntityType,
                required: true);

            var crossStreet = declaringEntityType.AddNavigation("CrossStreet",
                runtimeForeignKey,
                onDependent: true,
                typeof(CrossStreetDim),
                propertyInfo: typeof(StreetCrossStreet).GetProperty("CrossStreet", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(StreetCrossStreet).GetField("<CrossStreet>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var streetCrossStreets = principalEntityType.AddNavigation("StreetCrossStreets",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<StreetCrossStreet>),
                propertyInfo: typeof(CrossStreetDim).GetProperty("StreetCrossStreets", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(CrossStreetDim).GetField("<StreetCrossStreets>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__StreetCro__cross__3FF2D5BF");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("StreetId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("StreetId") }),
                principalEntityType,
                required: true);

            var street = declaringEntityType.AddNavigation("Street",
                runtimeForeignKey,
                onDependent: true,
                typeof(StreetDim),
                propertyInfo: typeof(StreetCrossStreet).GetProperty("Street", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(StreetCrossStreet).GetField("<Street>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var streetCrossStreets = principalEntityType.AddNavigation("StreetCrossStreets",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<StreetCrossStreet>),
                propertyInfo: typeof(StreetDim).GetProperty("StreetCrossStreets", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(StreetDim).GetField("<StreetCrossStreets>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__StreetCro__stree__3EFEB186");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "StreetCrossStreet");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
