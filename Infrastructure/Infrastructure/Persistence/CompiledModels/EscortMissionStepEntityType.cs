// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class EscortMissionStepEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.EscortMissionStep",
                typeof(EscortMissionStep),
                baseEntityType,
                propertyCount: 5,
                navigationCount: 2,
                foreignKeyCount: 2,
                unnamedIndexCount: 2,
                keyCount: 1);

            var escortMissionStepId = runtimeEntityType.AddProperty(
                "EscortMissionStepId",
                typeof(long),
                propertyInfo: typeof(EscortMissionStep).GetProperty("EscortMissionStepId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<EscortMissionStepId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            escortMissionStepId.AddAnnotation("Relational:ColumnName", "EscortMissionStepID");
            escortMissionStepId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var creationDateTime = runtimeEntityType.AddProperty(
                "CreationDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(EscortMissionStep).GetProperty("CreationDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<CreationDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            creationDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var escortMissionId = runtimeEntityType.AddProperty(
                "EscortMissionId",
                typeof(long),
                propertyInfo: typeof(EscortMissionStep).GetProperty("EscortMissionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<EscortMissionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            escortMissionId.AddAnnotation("Relational:ColumnName", "EscortMissionID");
            escortMissionId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var missionStepId = runtimeEntityType.AddProperty(
                "MissionStepId",
                typeof(int),
                propertyInfo: typeof(EscortMissionStep).GetProperty("MissionStepId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<MissionStepId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            missionStepId.AddAnnotation("Relational:ColumnName", "MissionStepID");
            missionStepId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var notes = runtimeEntityType.AddProperty(
                "Notes",
                typeof(string),
                propertyInfo: typeof(EscortMissionStep).GetProperty("Notes", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<Notes>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 4000);
            notes.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { escortMissionStepId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK_EscortMissionSteps");

            var index = runtimeEntityType.AddIndex(
                new[] { escortMissionId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { missionStepId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("EscortMissionId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("EscortMissionId") }),
                principalEntityType,
                required: true);

            var escortMission = declaringEntityType.AddNavigation("EscortMission",
                runtimeForeignKey,
                onDependent: true,
                typeof(EscortMission),
                propertyInfo: typeof(EscortMissionStep).GetProperty("EscortMission", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<EscortMission>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var escortMissionSteps = principalEntityType.AddNavigation("EscortMissionSteps",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<EscortMissionStep>),
                propertyInfo: typeof(EscortMission).GetProperty("EscortMissionSteps", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMission).GetField("<EscortMissionSteps>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_EscortMissionSteps_EscortMissions");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MissionStepId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MissionStepId") }),
                principalEntityType,
                required: true);

            var missionStep = declaringEntityType.AddNavigation("MissionStep",
                runtimeForeignKey,
                onDependent: true,
                typeof(MissionStepDim),
                propertyInfo: typeof(EscortMissionStep).GetProperty("MissionStep", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EscortMissionStep).GetField("<MissionStep>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var escortMissionSteps = principalEntityType.AddNavigation("EscortMissionSteps",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<EscortMissionStep>),
                propertyInfo: typeof(MissionStepDim).GetProperty("EscortMissionSteps", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MissionStepDim).GetField("<EscortMissionSteps>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_EscortMissionStep_MissionStepDim");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "EscortMissionStep");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
