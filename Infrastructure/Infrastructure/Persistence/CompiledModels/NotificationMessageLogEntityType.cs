// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class NotificationMessageLogEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.NotificationMessageLog",
                typeof(NotificationMessageLog),
                baseEntityType,
                propertyCount: 15,
                navigationCount: 3,
                foreignKeyCount: 1,
                unnamedIndexCount: 1,
                keyCount: 1);

            var messageLogId = runtimeEntityType.AddProperty(
                "MessageLogId",
                typeof(long),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("MessageLogId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<MessageLogId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            messageLogId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var createdDate = runtimeEntityType.AddProperty(
                "CreatedDate",
                typeof(DateTime),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("CreatedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<CreatedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));
            createdDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var errorMessage = runtimeEntityType.AddProperty(
                "ErrorMessage",
                typeof(string),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("ErrorMessage", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<ErrorMessage>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            errorMessage.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isRead = runtimeEntityType.AddProperty(
                "IsRead",
                typeof(bool?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("IsRead", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<IsRead>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isRead.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isReceived = runtimeEntityType.AddProperty(
                "IsReceived",
                typeof(bool?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("IsReceived", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<IsReceived>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isReceived.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isSent = runtimeEntityType.AddProperty(
                "IsSent",
                typeof(bool?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("IsSent", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<IsSent>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isSent.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var messageTemplateId = runtimeEntityType.AddProperty(
                "MessageTemplateId",
                typeof(int),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("MessageTemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<MessageTemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            messageTemplateId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var messageTemplateLanguage = runtimeEntityType.AddProperty(
                "MessageTemplateLanguage",
                typeof(string),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("MessageTemplateLanguage", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<MessageTemplateLanguage>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 10,
                unicode: false);
            messageTemplateLanguage.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var readDate = runtimeEntityType.AddProperty(
                "ReadDate",
                typeof(DateTime?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("ReadDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<ReadDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            readDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var receivedDate = runtimeEntityType.AddProperty(
                "ReceivedDate",
                typeof(DateTime?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("ReceivedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<ReceivedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            receivedDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var receiverMobileNumber = runtimeEntityType.AddProperty(
                "ReceiverMobileNumber",
                typeof(string),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("ReceiverMobileNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<ReceiverMobileNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 500);
            receiverMobileNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var referenceRequestId = runtimeEntityType.AddProperty(
                "ReferenceRequestId",
                typeof(string),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("ReferenceRequestId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<ReferenceRequestId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            referenceRequestId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var senderMobileNumber = runtimeEntityType.AddProperty(
                "SenderMobileNumber",
                typeof(string),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("SenderMobileNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<SenderMobileNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 20);
            senderMobileNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sentDate = runtimeEntityType.AddProperty(
                "SentDate",
                typeof(DateTime?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("SentDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<SentDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sentDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var updatedDate = runtimeEntityType.AddProperty(
                "UpdatedDate",
                typeof(DateTime?),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("UpdatedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<UpdatedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            updatedDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { messageLogId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__Notifica__96DF7C58DF1EB75E");

            var index = runtimeEntityType.AddIndex(
                new[] { messageTemplateId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MessageTemplateId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MessageTemplateId") }),
                principalEntityType,
                required: true);

            var messageTemplate = declaringEntityType.AddNavigation("MessageTemplate",
                runtimeForeignKey,
                onDependent: true,
                typeof(NotificationMessageTemplate),
                propertyInfo: typeof(NotificationMessageLog).GetProperty("MessageTemplate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageLog).GetField("<MessageTemplate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var notificationMessageLogs = principalEntityType.AddNavigation("NotificationMessageLogs",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<NotificationMessageLog>),
                propertyInfo: typeof(NotificationMessageTemplate).GetProperty("NotificationMessageLogs", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageTemplate).GetField("<NotificationMessageLogs>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__Notificat__Messa__43319722");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "NotificationMessageLog");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
