// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class SmstoWhatsMappingEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.SmstoWhatsMapping",
                typeof(SmstoWhatsMapping),
                baseEntityType,
                propertyCount: 8,
                navigationCount: 2,
                foreignKeyCount: 1,
                unnamedIndexCount: 1,
                keyCount: 1);

            var smstoWhatsupId = runtimeEntityType.AddProperty(
                "SmstoWhatsupId",
                typeof(long),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("SmstoWhatsupId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<SmstoWhatsupId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            smstoWhatsupId.AddAnnotation("Relational:ColumnName", "SMSToWhatsupId");
            smstoWhatsupId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var isSmsretry = runtimeEntityType.AddProperty(
                "IsSmsretry",
                typeof(bool),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("IsSmsretry", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<IsSmsretry>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: false);
            isSmsretry.AddAnnotation("Relational:ColumnName", "IsSMSRetry");
            isSmsretry.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isWhatsForced = runtimeEntityType.AddProperty(
                "IsWhatsForced",
                typeof(bool),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("IsWhatsForced", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<IsWhatsForced>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: false);
            isWhatsForced.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var smsarabicLangToWhatsLang = runtimeEntityType.AddProperty(
                "SmsarabicLangToWhatsLang",
                typeof(string),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("SmsarabicLangToWhatsLang", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<SmsarabicLangToWhatsLang>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 50);
            smsarabicLangToWhatsLang.AddAnnotation("Relational:ColumnName", "SMSArabicLangToWhatsLang");
            smsarabicLangToWhatsLang.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var smsenglishLangToWhatsLang = runtimeEntityType.AddProperty(
                "SmsenglishLangToWhatsLang",
                typeof(string),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("SmsenglishLangToWhatsLang", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<SmsenglishLangToWhatsLang>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 50);
            smsenglishLangToWhatsLang.AddAnnotation("Relational:ColumnName", "SMSEnglishLangToWhatsLang");
            smsenglishLangToWhatsLang.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var smsretryPeriodSecs = runtimeEntityType.AddProperty(
                "SmsretryPeriodSecs",
                typeof(int),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("SmsretryPeriodSecs", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<SmsretryPeriodSecs>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            smsretryPeriodSecs.AddAnnotation("Relational:ColumnName", "SMSRetryPeriodSecs");
            smsretryPeriodSecs.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var smstemplateId = runtimeEntityType.AddProperty(
                "SmstemplateId",
                typeof(int),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("SmstemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<SmstemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            smstemplateId.AddAnnotation("Relational:ColumnName", "SMSTemplateId");
            smstemplateId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var whatsUpTemplateId = runtimeEntityType.AddProperty(
                "WhatsUpTemplateId",
                typeof(int),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("WhatsUpTemplateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<WhatsUpTemplateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            whatsUpTemplateId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { smstoWhatsupId });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { whatsUpTemplateId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("WhatsUpTemplateId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MessageTemplateId") }),
                principalEntityType,
                required: true);

            var whatsUpTemplate = declaringEntityType.AddNavigation("WhatsUpTemplate",
                runtimeForeignKey,
                onDependent: true,
                typeof(NotificationMessageTemplate),
                propertyInfo: typeof(SmstoWhatsMapping).GetProperty("WhatsUpTemplate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SmstoWhatsMapping).GetField("<WhatsUpTemplate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var smstoWhatsMappings = principalEntityType.AddNavigation("SmstoWhatsMappings",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<SmstoWhatsMapping>),
                propertyInfo: typeof(NotificationMessageTemplate).GetProperty("SmstoWhatsMappings", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(NotificationMessageTemplate).GetField("<SmstoWhatsMappings>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_SMSToWhatsMapping_NotificationMessageTemplate");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "SMSToWhatsMapping");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
