// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class EventsAttendanceLogStatusDimEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.EventsAttendanceLogStatusDim",
                typeof(EventsAttendanceLogStatusDim),
                baseEntityType,
                propertyCount: 6,
                navigationCount: 3,
                foreignKeyCount: 1,
                unnamedIndexCount: 1,
                keyCount: 1);

            var eventAttandaceLogStatusId = runtimeEntityType.AddProperty(
                "EventAttandaceLogStatusId",
                typeof(int),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("EventAttandaceLogStatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<EventAttandaceLogStatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0);
            eventAttandaceLogStatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var description = runtimeEntityType.AddProperty(
                "Description",
                typeof(string),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("Description", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<Description>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            description.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var eventAttandaceTypeId = runtimeEntityType.AddProperty(
                "EventAttandaceTypeId",
                typeof(long?),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("EventAttandaceTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<EventAttandaceTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            eventAttandaceTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isDeleted = runtimeEntityType.AddProperty(
                "IsDeleted",
                typeof(bool?),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("IsDeleted", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<IsDeleted>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isDeleted.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var navigatePath = runtimeEntityType.AddProperty(
                "NavigatePath",
                typeof(string),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("NavigatePath", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<NavigatePath>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            navigatePath.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var orderNumber = runtimeEntityType.AddProperty(
                "OrderNumber",
                typeof(int?),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("OrderNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<OrderNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            orderNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { eventAttandaceLogStatusId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK_AttandaceLogTypeDim");

            var index = runtimeEntityType.AddIndex(
                new[] { eventAttandaceTypeId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("EventAttandaceTypeId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("AttandaceTypId") }),
                principalEntityType);

            var eventAttandaceType = declaringEntityType.AddNavigation("EventAttandaceType",
                runtimeForeignKey,
                onDependent: true,
                typeof(EventsAttendanceTypeDim),
                propertyInfo: typeof(EventsAttendanceLogStatusDim).GetProperty("EventAttandaceType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceLogStatusDim).GetField("<EventAttandaceType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var eventsAttendanceLogStatusDims = principalEntityType.AddNavigation("EventsAttendanceLogStatusDims",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<EventsAttendanceLogStatusDim>),
                propertyInfo: typeof(EventsAttendanceTypeDim).GetProperty("EventsAttendanceLogStatusDims", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(EventsAttendanceTypeDim).GetField("<EventsAttendanceLogStatusDims>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_EventsAttendanceLogStatusDim_EventsAttendanceTypeDim");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "EventsAttendanceLogStatusDim");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
