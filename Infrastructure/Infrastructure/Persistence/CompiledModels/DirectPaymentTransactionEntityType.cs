// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class DirectPaymentTransactionEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.DirectPaymentTransaction",
                typeof(DirectPaymentTransaction),
                baseEntityType,
                propertyCount: 9,
                navigationCount: 1,
                foreignKeyCount: 1,
                unnamedIndexCount: 1,
                keyCount: 1);

            var directPaymentTransactionId = runtimeEntityType.AddProperty(
                "DirectPaymentTransactionId",
                typeof(long),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("DirectPaymentTransactionId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<DirectPaymentTransactionId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            directPaymentTransactionId.AddAnnotation("Relational:ColumnName", "DirectPaymentTransactionID");
            directPaymentTransactionId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var createdBy = runtimeEntityType.AddProperty(
                "CreatedBy",
                typeof(long?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("CreatedBy", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<CreatedBy>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            createdBy.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var creationDateTime = runtimeEntityType.AddProperty(
                "CreationDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("CreationDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<CreationDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            creationDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            creationDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var directPaymentReasonId = runtimeEntityType.AddProperty(
                "DirectPaymentReasonId",
                typeof(int?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("DirectPaymentReasonId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<DirectPaymentReasonId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            directPaymentReasonId.AddAnnotation("Relational:ColumnName", "DirectPaymentReasonID");
            directPaymentReasonId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var directPaymentSourceId = runtimeEntityType.AddProperty(
                "DirectPaymentSourceId",
                typeof(int?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("DirectPaymentSourceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<DirectPaymentSourceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            directPaymentSourceId.AddAnnotation("Relational:ColumnName", "DirectPaymentSourceID");
            directPaymentSourceId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var latestDirectPaymentStatusId = runtimeEntityType.AddProperty(
                "LatestDirectPaymentStatusId",
                typeof(int?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("LatestDirectPaymentStatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<LatestDirectPaymentStatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            latestDirectPaymentStatusId.AddAnnotation("Relational:ColumnName", "LatestDirectPaymentStatusID");
            latestDirectPaymentStatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportId = runtimeEntityType.AddProperty(
                "ReportId",
                typeof(int?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("ReportId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<ReportId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reportId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var strReason = runtimeEntityType.AddProperty(
                "StrReason",
                typeof(string),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("StrReason", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<StrReason>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            strReason.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var vehicleDataId = runtimeEntityType.AddProperty(
                "VehicleDataId",
                typeof(int?),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("VehicleDataId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<VehicleDataId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            vehicleDataId.AddAnnotation("Relational:ColumnName", "VehicleDataID");
            vehicleDataId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { directPaymentTransactionId });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { directPaymentReasonId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("DirectPaymentReasonId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("DirectPaymentReasonId") }),
                principalEntityType);

            var directPaymentReason = declaringEntityType.AddNavigation("DirectPaymentReason",
                runtimeForeignKey,
                onDependent: true,
                typeof(DirectPaymentReasonDim),
                propertyInfo: typeof(DirectPaymentTransaction).GetProperty("DirectPaymentReason", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentTransaction).GetField("<DirectPaymentReason>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var directPaymentTransactions = principalEntityType.AddNavigation("DirectPaymentTransactions",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<DirectPaymentTransaction>),
                propertyInfo: typeof(DirectPaymentReasonDim).GetProperty("DirectPaymentTransactions", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(DirectPaymentReasonDim).GetField("<DirectPaymentTransactions>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_DirectPaymentTransaction_DirectPaymentReasonsDim");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "DirectPaymentTransaction");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
