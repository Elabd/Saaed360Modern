// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class ReportCodeViewHelperEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.ReportCodeViewHelper",
                typeof(ReportCodeViewHelper),
                baseEntityType,
                propertyCount: 19);

            var adpreportNumber = runtimeEntityType.AddProperty(
                "AdpreportNumber",
                typeof(long?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("AdpreportNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<AdpreportNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            adpreportNumber.AddAnnotation("Relational:ColumnName", "ADPReportNumber");
            adpreportNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var adpstatusId = runtimeEntityType.AddProperty(
                "AdpstatusId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("AdpstatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<AdpstatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            adpstatusId.AddAnnotation("Relational:ColumnName", "ADPStatusId");
            adpstatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cityId = runtimeEntityType.AddProperty(
                "CityId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("CityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<CityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            cityId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var inEmirates = runtimeEntityType.AddProperty(
                "InEmirates",
                typeof(bool?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("InEmirates", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<InEmirates>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            inEmirates.AddAnnotation("Relational:ColumnName", "inEmirates");
            inEmirates.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var itemRegistrationPlateCategoryId = runtimeEntityType.AddProperty(
                "ItemRegistrationPlateCategoryId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ItemRegistrationPlateCategoryId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ItemRegistrationPlateCategoryId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            itemRegistrationPlateCategoryId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var itemRegistrationPlateColorId = runtimeEntityType.AddProperty(
                "ItemRegistrationPlateColorId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ItemRegistrationPlateColorId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ItemRegistrationPlateColorId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            itemRegistrationPlateColorId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var itemRegistrationPlateKindId = runtimeEntityType.AddProperty(
                "ItemRegistrationPlateKindId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ItemRegistrationPlateKindId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ItemRegistrationPlateKindId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            itemRegistrationPlateKindId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ownerTcn = runtimeEntityType.AddProperty(
                "OwnerTcn",
                typeof(string),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("OwnerTcn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<OwnerTcn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 3000);
            ownerTcn.AddAnnotation("Relational:ColumnName", "OwnerTCN");
            ownerTcn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateNumber = runtimeEntityType.AddProperty(
                "PlateNumber",
                typeof(string),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("PlateNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<PlateNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 3000);
            plateNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var plateSourceId = runtimeEntityType.AddProperty(
                "PlateSourceId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("PlateSourceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<PlateSourceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            plateSourceId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportCode = runtimeEntityType.AddProperty(
                "ReportCode",
                typeof(string),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ReportCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ReportCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            reportCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportNumber = runtimeEntityType.AddProperty(
                "ReportNumber",
                typeof(string),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ReportNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ReportNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            reportNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportTypeId = runtimeEntityType.AddProperty(
                "ReportTypeId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ReportTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ReportTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reportTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportYear = runtimeEntityType.AddProperty(
                "ReportYear",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("ReportYear", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<ReportYear>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reportYear.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportid = runtimeEntityType.AddProperty(
                "Reportid",
                typeof(int),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("Reportid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<Reportid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            reportid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var statusId = runtimeEntityType.AddProperty(
                "StatusId",
                typeof(string),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("StatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<StatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            statusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var systemCode = runtimeEntityType.AddProperty(
                "SystemCode",
                typeof(string),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("SystemCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<SystemCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50,
                unicode: false);
            systemCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var vehicleDataId = runtimeEntityType.AddProperty(
                "VehicleDataId",
                typeof(int),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("VehicleDataId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<VehicleDataId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            vehicleDataId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var vehicleRuleId = runtimeEntityType.AddProperty(
                "VehicleRuleId",
                typeof(int?),
                propertyInfo: typeof(ReportCodeViewHelper).GetProperty("VehicleRuleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ReportCodeViewHelper).GetField("<VehicleRuleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            vehicleRuleId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "ReportCodeViewHelper");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
