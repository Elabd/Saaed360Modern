// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class PurchaseRequestStatusEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.PurchaseRequestStatus",
                typeof(PurchaseRequestStatus),
                baseEntityType,
                propertyCount: 5,
                navigationCount: 3,
                keyCount: 1);

            var purchaseRequestStatusId = runtimeEntityType.AddProperty(
                "PurchaseRequestStatusId",
                typeof(int),
                propertyInfo: typeof(PurchaseRequestStatus).GetProperty("PurchaseRequestStatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PurchaseRequestStatus).GetField("<PurchaseRequestStatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0);
            purchaseRequestStatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var isAfterSubmittingStatus = runtimeEntityType.AddProperty(
                "IsAfterSubmittingStatus",
                typeof(bool?),
                propertyInfo: typeof(PurchaseRequestStatus).GetProperty("IsAfterSubmittingStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PurchaseRequestStatus).GetField("<IsAfterSubmittingStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isAfterSubmittingStatus.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var purchaseRequestStatusArabic = runtimeEntityType.AddProperty(
                "PurchaseRequestStatusArabic",
                typeof(string),
                propertyInfo: typeof(PurchaseRequestStatus).GetProperty("PurchaseRequestStatusArabic", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PurchaseRequestStatus).GetField("<PurchaseRequestStatusArabic>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 50);
            purchaseRequestStatusArabic.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var purchaseRequestStatusCode = runtimeEntityType.AddProperty(
                "PurchaseRequestStatusCode",
                typeof(string),
                propertyInfo: typeof(PurchaseRequestStatus).GetProperty("PurchaseRequestStatusCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PurchaseRequestStatus).GetField("<PurchaseRequestStatusCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 50,
                unicode: false);
            purchaseRequestStatusCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var purchaseRequestStatusEnglish = runtimeEntityType.AddProperty(
                "PurchaseRequestStatusEnglish",
                typeof(string),
                propertyInfo: typeof(PurchaseRequestStatus).GetProperty("PurchaseRequestStatusEnglish", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(PurchaseRequestStatus).GetField("<PurchaseRequestStatusEnglish>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 50);
            purchaseRequestStatusEnglish.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { purchaseRequestStatusId });
            runtimeEntityType.SetPrimaryKey(key);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "PurchaseRequestStatus");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
