// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class Saaed360ViewIncidentDetailEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.Saaed360ViewIncidentDetail",
                typeof(Saaed360ViewIncidentDetail),
                baseEntityType,
                propertyCount: 36);

            var adpDate = runtimeEntityType.AddProperty(
                "AdpDate",
                typeof(DateTime?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("AdpDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<AdpDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            adpDate.AddAnnotation("Relational:ColumnType", "datetime");
            adpDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var adpNumber = runtimeEntityType.AddProperty(
                "AdpNumber",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("AdpNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<AdpNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            adpNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var answeringTime = runtimeEntityType.AddProperty(
                "AnsweringTime",
                typeof(DateTime?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("AnsweringTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<AnsweringTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            answeringTime.AddAnnotation("Relational:ColumnType", "datetime");
            answeringTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var areaId = runtimeEntityType.AddProperty(
                "AreaId",
                typeof(long),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("AreaId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<AreaId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            areaId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var convertToStationOrganization = runtimeEntityType.AddProperty(
                "ConvertToStationOrganization",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("ConvertToStationOrganization", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<ConvertToStationOrganization>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            convertToStationOrganization.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var convertToStationReason = runtimeEntityType.AddProperty(
                "ConvertToStationReason",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("ConvertToStationReason", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<ConvertToStationReason>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            convertToStationReason.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var convertToStationWorkFlow = runtimeEntityType.AddProperty(
                "ConvertToStationWorkFlow",
                typeof(Guid?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("ConvertToStationWorkFlow", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<ConvertToStationWorkFlow>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            convertToStationWorkFlow.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var emirateId = runtimeEntityType.AddProperty(
                "EmirateId",
                typeof(long),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("EmirateId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<EmirateId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            emirateId.AddAnnotation("Relational:ColumnName", "EmirateID");
            emirateId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var icccdispatcherId = runtimeEntityType.AddProperty(
                "IcccdispatcherId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IcccdispatcherId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IcccdispatcherId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            icccdispatcherId.AddAnnotation("Relational:ColumnName", "ICCCDispatcherId");
            icccdispatcherId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentAddress = runtimeEntityType.AddProperty(
                "IncidentAddress",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentAddress", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentAddress>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentAddress.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentDateTime = runtimeEntityType.AddProperty(
                "IncidentDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            incidentDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentDesription = runtimeEntityType.AddProperty(
                "IncidentDesription",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentDesription", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentDesription>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentDesription.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentGeneratedNumber = runtimeEntityType.AddProperty(
                "IncidentGeneratedNumber",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentGeneratedNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentGeneratedNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            incidentGeneratedNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentId = runtimeEntityType.AddProperty(
                "IncidentId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentLatitude = runtimeEntityType.AddProperty(
                "IncidentLatitude",
                typeof(double?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentLatitude", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentLatitude>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentLatitude.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentLongitude = runtimeEntityType.AddProperty(
                "IncidentLongitude",
                typeof(double?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentLongitude", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentLongitude>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentLongitude.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentPrioirtyId = runtimeEntityType.AddProperty(
                "IncidentPrioirtyId",
                typeof(int?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentPrioirtyId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentPrioirtyId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentPrioirtyId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentStatusId = runtimeEntityType.AddProperty(
                "IncidentStatusId",
                typeof(int?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentStatusId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentStatusId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentStatusId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentTypeId = runtimeEntityType.AddProperty(
                "IncidentTypeId",
                typeof(int?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IncidentTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IncidentTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isAnsweringTimeExist = runtimeEntityType.AddProperty(
                "IsAnsweringTimeExist",
                typeof(bool?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IsAnsweringTimeExist", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IsAnsweringTimeExist>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isAnsweringTimeExist.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isConvertedToPoliceStation = runtimeEntityType.AddProperty(
                "IsConvertedToPoliceStation",
                typeof(bool?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IsConvertedToPoliceStation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IsConvertedToPoliceStation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isConvertedToPoliceStation.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isDelayed = runtimeEntityType.AddProperty(
                "IsDelayed",
                typeof(bool?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IsDelayed", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IsDelayed>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isDelayed.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isDeliveredToPoliceStation = runtimeEntityType.AddProperty(
                "IsDeliveredToPoliceStation",
                typeof(bool?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IsDeliveredToPoliceStation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IsDeliveredToPoliceStation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isDeliveredToPoliceStation.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isDeliveredtoStation = runtimeEntityType.AddProperty(
                "IsDeliveredtoStation",
                typeof(bool?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("IsDeliveredtoStation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<IsDeliveredtoStation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            isDeliveredtoStation.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var landMarkId = runtimeEntityType.AddProperty(
                "LandMarkId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("LandMarkId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<LandMarkId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            landMarkId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mapStatusIcon = runtimeEntityType.AddProperty(
                "MapStatusIcon",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("MapStatusIcon", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<MapStatusIcon>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 28,
                unicode: false);
            mapStatusIcon.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var organizationId = runtimeEntityType.AddProperty(
                "OrganizationId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("OrganizationId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<OrganizationId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            organizationId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var organizationName = runtimeEntityType.AddProperty(
                "OrganizationName",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("OrganizationName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<OrganizationName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            organizationName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var patrolStatus = runtimeEntityType.AddProperty(
                "PatrolStatus",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("PatrolStatus", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<PatrolStatus>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            patrolStatus.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sectorId = runtimeEntityType.AddProperty(
                "SectorId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("SectorId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<SectorId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sectorId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sectorName = runtimeEntityType.AddProperty(
                "SectorName",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("SectorName", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<SectorName>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            sectorName.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sourceDetailId = runtimeEntityType.AddProperty(
                "SourceDetailId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("SourceDetailId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<SourceDetailId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sourceDetailId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sourceId = runtimeEntityType.AddProperty(
                "SourceId",
                typeof(long?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("SourceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<SourceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sourceId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var supportNames = runtimeEntityType.AddProperty(
                "SupportNames",
                typeof(string),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("SupportNames", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<SupportNames>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            supportNames.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var telephoneCallId = runtimeEntityType.AddProperty(
                "TelephoneCallId",
                typeof(long),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("TelephoneCallId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<TelephoneCallId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            telephoneCallId.AddAnnotation("Relational:ColumnName", "TelephoneCallID");
            telephoneCallId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var workFlowGuid = runtimeEntityType.AddProperty(
                "WorkFlowGuid",
                typeof(Guid?),
                propertyInfo: typeof(Saaed360ViewIncidentDetail).GetProperty("WorkFlowGuid", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Saaed360ViewIncidentDetail).GetField("<WorkFlowGuid>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            workFlowGuid.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "Saaed360ViewIncidentDetails");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
