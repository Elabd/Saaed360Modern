// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class RoadAssistGeneralInfoEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.RoadAssistGeneralInfo",
                typeof(RoadAssistGeneralInfo),
                baseEntityType,
                propertyCount: 12,
                keyCount: 1);

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(Guid),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: new Guid("00000000-0000-0000-0000-000000000000"));
            id.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var descriptionAr = runtimeEntityType.AddProperty(
                "DescriptionAr",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("DescriptionAr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<DescriptionAr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            descriptionAr.AddAnnotation("Relational:ColumnName", "DescriptionAR");
            descriptionAr.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var descriptionEn = runtimeEntityType.AddProperty(
                "DescriptionEn",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("DescriptionEn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<DescriptionEn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                unicode: false);
            descriptionEn.AddAnnotation("Relational:ColumnName", "DescriptionEN");
            descriptionEn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var imageUrl = runtimeEntityType.AddProperty(
                "ImageUrl",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("ImageUrl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<ImageUrl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 1000,
                unicode: false);
            imageUrl.AddAnnotation("Relational:ColumnName", "ImageURL");
            imageUrl.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var processTimeTextAr = runtimeEntityType.AddProperty(
                "ProcessTimeTextAr",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("ProcessTimeTextAr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<ProcessTimeTextAr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 1000);
            processTimeTextAr.AddAnnotation("Relational:ColumnName", "ProcessTimeTextAR");
            processTimeTextAr.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var processTimeTextEn = runtimeEntityType.AddProperty(
                "ProcessTimeTextEn",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("ProcessTimeTextEn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<ProcessTimeTextEn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 1000,
                unicode: false);
            processTimeTextEn.AddAnnotation("Relational:ColumnName", "ProcessTimeTextEN");
            processTimeTextEn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var requiredDocumentsTextAr = runtimeEntityType.AddProperty(
                "RequiredDocumentsTextAr",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("RequiredDocumentsTextAr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<RequiredDocumentsTextAr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 1000);
            requiredDocumentsTextAr.AddAnnotation("Relational:ColumnName", "RequiredDocumentsTextAR");
            requiredDocumentsTextAr.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var requiredDocumentsTextEn = runtimeEntityType.AddProperty(
                "RequiredDocumentsTextEn",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("RequiredDocumentsTextEn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<RequiredDocumentsTextEn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 1000,
                unicode: false);
            requiredDocumentsTextEn.AddAnnotation("Relational:ColumnName", "RequiredDocumentsTextEN");
            requiredDocumentsTextEn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var serviceFeesTextAr = runtimeEntityType.AddProperty(
                "ServiceFeesTextAr",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("ServiceFeesTextAr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<ServiceFeesTextAr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 500);
            serviceFeesTextAr.AddAnnotation("Relational:ColumnName", "ServiceFeesTextAR");
            serviceFeesTextAr.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var serviceFeesTextEn = runtimeEntityType.AddProperty(
                "ServiceFeesTextEn",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("ServiceFeesTextEn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<ServiceFeesTextEn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 500,
                unicode: false);
            serviceFeesTextEn.AddAnnotation("Relational:ColumnName", "ServiceFeesTextEN");
            serviceFeesTextEn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var titleAr = runtimeEntityType.AddProperty(
                "TitleAr",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("TitleAr", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<TitleAr>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 250);
            titleAr.AddAnnotation("Relational:ColumnName", "TitleAR");
            titleAr.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var titleEn = runtimeEntityType.AddProperty(
                "TitleEn",
                typeof(string),
                propertyInfo: typeof(RoadAssistGeneralInfo).GetProperty("TitleEn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RoadAssistGeneralInfo).GetField("<TitleEn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                maxLength: 250,
                unicode: false);
            titleEn.AddAnnotation("Relational:ColumnName", "TitleEN");
            titleEn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { id });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__RoadAssi__3214EC079C4D9175");

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "RoadAssistGeneralInfo");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
