// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class IncidentTimesHelpEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.IncidentTimesHelp",
                typeof(IncidentTimesHelp),
                baseEntityType,
                propertyCount: 10);

            var activityId = runtimeEntityType.AddProperty(
                "ActivityId",
                typeof(long),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("ActivityId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<ActivityId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            activityId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ad = runtimeEntityType.AddProperty(
                "Ad",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Ad", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Ad>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ad.AddAnnotation("Relational:ColumnName", "AD");
            ad.AddAnnotation("Relational:ColumnType", "datetime");
            ad.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ak = runtimeEntityType.AddProperty(
                "Ak",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Ak", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Ak>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ak.AddAnnotation("Relational:ColumnName", "AK");
            ak.AddAnnotation("Relational:ColumnType", "datetime");
            ak.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ar1 = runtimeEntityType.AddProperty(
                "Ar1",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Ar1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Ar1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ar1.AddAnnotation("Relational:ColumnName", "AR1");
            ar1.AddAnnotation("Relational:ColumnType", "datetime");
            ar1.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ar2 = runtimeEntityType.AddProperty(
                "Ar2",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Ar2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Ar2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ar2.AddAnnotation("Relational:ColumnName", "AR2");
            ar2.AddAnnotation("Relational:ColumnType", "datetime");
            ar2.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ca = runtimeEntityType.AddProperty(
                "Ca",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Ca", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Ca>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ca.AddAnnotation("Relational:ColumnName", "CA");
            ca.AddAnnotation("Relational:ColumnType", "datetime");
            ca.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var cl = runtimeEntityType.AddProperty(
                "Cl",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Cl", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Cl>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            cl.AddAnnotation("Relational:ColumnName", "CL");
            cl.AddAnnotation("Relational:ColumnType", "datetime");
            cl.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var closedIncident = runtimeEntityType.AddProperty(
                "ClosedIncident",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("ClosedIncident", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<ClosedIncident>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            closedIncident.AddAnnotation("Relational:ColumnName", "Closed Incident");
            closedIncident.AddAnnotation("Relational:ColumnType", "datetime");
            closedIncident.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var earc = runtimeEntityType.AddProperty(
                "Earc",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Earc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Earc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            earc.AddAnnotation("Relational:ColumnName", "EARC");
            earc.AddAnnotation("Relational:ColumnType", "datetime");
            earc.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sarc = runtimeEntityType.AddProperty(
                "Sarc",
                typeof(DateTime?),
                propertyInfo: typeof(IncidentTimesHelp).GetProperty("Sarc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(IncidentTimesHelp).GetField("<Sarc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sarc.AddAnnotation("Relational:ColumnName", "SARC");
            sarc.AddAnnotation("Relational:ColumnType", "datetime");
            sarc.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "IncidentTimesHelp");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
