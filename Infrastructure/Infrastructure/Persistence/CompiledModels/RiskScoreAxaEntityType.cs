// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class RiskScoreAxaEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.RiskScoreAxa",
                typeof(RiskScoreAxa),
                baseEntityType,
                propertyCount: 5);

            var chass = runtimeEntityType.AddProperty(
                "Chass",
                typeof(string),
                propertyInfo: typeof(RiskScoreAxa).GetProperty("Chass", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RiskScoreAxa).GetField("<Chass>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            chass.AddAnnotation("Relational:ColumnName", "Chass,");
            chass.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var claimNo = runtimeEntityType.AddProperty(
                "ClaimNo",
                typeof(double?),
                propertyInfo: typeof(RiskScoreAxa).GetProperty("ClaimNo", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RiskScoreAxa).GetField("<ClaimNo>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            claimNo.AddAnnotation("Relational:ColumnName", "Claim No");
            claimNo.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var fraudScoure = runtimeEntityType.AddProperty(
                "FraudScoure",
                typeof(double?),
                propertyInfo: typeof(RiskScoreAxa).GetProperty("FraudScoure", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RiskScoreAxa).GetField("<FraudScoure>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            fraudScoure.AddAnnotation("Relational:ColumnName", "Fraud Scoure");
            fraudScoure.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var statusInMotori = runtimeEntityType.AddProperty(
                "StatusInMotori",
                typeof(string),
                propertyInfo: typeof(RiskScoreAxa).GetProperty("StatusInMotori", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RiskScoreAxa).GetField("<StatusInMotori>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 255);
            statusInMotori.AddAnnotation("Relational:ColumnName", "Status in Motori");
            statusInMotori.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var tcn = runtimeEntityType.AddProperty(
                "Tcn",
                typeof(double?),
                propertyInfo: typeof(RiskScoreAxa).GetProperty("Tcn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RiskScoreAxa).GetField("<Tcn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            tcn.AddAnnotation("Relational:ColumnName", "TCN");
            tcn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "RiskScoreAXA");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
