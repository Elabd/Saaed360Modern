// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class SaaedReportOpenIncidentDetailEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.SaaedReportOpenIncidentDetail",
                typeof(SaaedReportOpenIncidentDetail),
                baseEntityType,
                propertyCount: 47);

            var acknowledgeDatetime = runtimeEntityType.AddProperty(
                "AcknowledgeDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AcknowledgeDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AcknowledgeDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            acknowledgeDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            acknowledgeDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var adpDate = runtimeEntityType.AddProperty(
                "AdpDate",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AdpDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AdpDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            adpDate.AddAnnotation("Relational:ColumnType", "datetime");
            adpDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var adpNumber = runtimeEntityType.AddProperty(
                "AdpNumber",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AdpNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AdpNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 20);
            adpNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var area = runtimeEntityType.AddProperty(
                "Area",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Area", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Area>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 200);
            area.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var arrival1 = runtimeEntityType.AddProperty(
                "Arrival1",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Arrival1", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Arrival1>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            arrival1.AddAnnotation("Relational:ColumnType", "datetime");
            arrival1.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var arrival1ResponseTime = runtimeEntityType.AddProperty(
                "Arrival1ResponseTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Arrival1ResponseTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Arrival1ResponseTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            arrival1ResponseTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var arrival2 = runtimeEntityType.AddProperty(
                "Arrival2",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Arrival2", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Arrival2>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            arrival2.AddAnnotation("Relational:ColumnType", "datetime");
            arrival2.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var arrival2ResponseTime = runtimeEntityType.AddProperty(
                "Arrival2ResponseTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Arrival2ResponseTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Arrival2ResponseTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            arrival2ResponseTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var assignResourceDatetime = runtimeEntityType.AddProperty(
                "AssignResourceDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AssignResourceDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AssignResourceDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            assignResourceDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            assignResourceDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var assignedDatetime = runtimeEntityType.AddProperty(
                "AssignedDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AssignedDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AssignedDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            assignedDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            assignedDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var atSceneDatetime = runtimeEntityType.AddProperty(
                "AtSceneDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AtSceneDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AtSceneDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            atSceneDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            atSceneDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var averageAssignTime = runtimeEntityType.AddProperty(
                "AverageAssignTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AverageAssignTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AverageAssignTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            averageAssignTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var averageClosedTime = runtimeEntityType.AddProperty(
                "AverageClosedTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AverageClosedTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AverageClosedTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            averageClosedTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var averageResponseTime = runtimeEntityType.AddProperty(
                "AverageResponseTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("AverageResponseTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<AverageResponseTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            averageResponseTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var callDispatcher = runtimeEntityType.AddProperty(
                "CallDispatcher",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("CallDispatcher", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<CallDispatcher>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 152);
            callDispatcher.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var callReceivedOn = runtimeEntityType.AddProperty(
                "CallReceivedOn",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("CallReceivedOn", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<CallReceivedOn>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            callReceivedOn.AddAnnotation("Relational:ColumnType", "datetime");
            callReceivedOn.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var callReceiver = runtimeEntityType.AddProperty(
                "CallReceiver",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("CallReceiver", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<CallReceiver>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 152);
            callReceiver.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var callReceiverCode = runtimeEntityType.AddProperty(
                "CallReceiverCode",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("CallReceiverCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<CallReceiverCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            callReceiverCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var callReceiverId = runtimeEntityType.AddProperty(
                "CallReceiverId",
                typeof(long?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("CallReceiverId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<CallReceiverId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            callReceiverId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var closingDatetime = runtimeEntityType.AddProperty(
                "ClosingDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("ClosingDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<ClosingDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            closingDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            closingDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var controlCenter = runtimeEntityType.AddProperty(
                "ControlCenter",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("ControlCenter", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<ControlCenter>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            controlCenter.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dispatchDateTime = runtimeEntityType.AddProperty(
                "DispatchDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("DispatchDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<DispatchDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dispatchDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            dispatchDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dispatchResponseTime = runtimeEntityType.AddProperty(
                "DispatchResponseTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("DispatchResponseTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<DispatchResponseTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dispatchResponseTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dispatcherCode = runtimeEntityType.AddProperty(
                "DispatcherCode",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("DispatcherCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<DispatcherCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            dispatcherCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dispatcherId = runtimeEntityType.AddProperty(
                "DispatcherId",
                typeof(long?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("DispatcherId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<DispatcherId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dispatcherId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var dispatchers = runtimeEntityType.AddProperty(
                "Dispatchers",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Dispatchers", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Dispatchers>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            dispatchers.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var endArc = runtimeEntityType.AddProperty(
                "EndArc",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("EndArc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<EndArc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            endArc.AddAnnotation("Relational:ColumnName", "EndARC");
            endArc.AddAnnotation("Relational:ColumnType", "datetime");
            endArc.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentCategory = runtimeEntityType.AddProperty(
                "IncidentCategory",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("IncidentCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<IncidentCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 250);
            incidentCategory.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentCreationDate = runtimeEntityType.AddProperty(
                "IncidentCreationDate",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("IncidentCreationDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<IncidentCreationDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentCreationDate.AddAnnotation("Relational:ColumnType", "datetime");
            incidentCreationDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentId = runtimeEntityType.AddProperty(
                "IncidentId",
                typeof(long?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("IncidentId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<IncidentId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            incidentId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentNumber = runtimeEntityType.AddProperty(
                "IncidentNumber",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("IncidentNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<IncidentNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            incidentNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var incidentType = runtimeEntityType.AddProperty(
                "IncidentType",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("IncidentType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<IncidentType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            incidentType.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var leftSceneDatetime = runtimeEntityType.AddProperty(
                "LeftSceneDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("LeftSceneDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<LeftSceneDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            leftSceneDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            leftSceneDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var locationIdentifiedDatetime = runtimeEntityType.AddProperty(
                "LocationIdentifiedDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("LocationIdentifiedDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<LocationIdentifiedDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            locationIdentifiedDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            locationIdentifiedDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var notes = runtimeEntityType.AddProperty(
                "Notes",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Notes", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Notes>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            notes.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var onRoutDateTime = runtimeEntityType.AddProperty(
                "OnRoutDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("OnRoutDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<OnRoutDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            onRoutDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            onRoutDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var patrolCode = runtimeEntityType.AddProperty(
                "PatrolCode",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("PatrolCode", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<PatrolCode>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            patrolCode.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var priority = runtimeEntityType.AddProperty(
                "Priority",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("Priority", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<Priority>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 100);
            priority.AddAnnotation("Relational:ColumnName", "priority");
            priority.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var priorityColor = runtimeEntityType.AddProperty(
                "PriorityColor",
                typeof(string),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("PriorityColor", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<PriorityColor>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                maxLength: 50);
            priorityColor.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reconstructionTime = runtimeEntityType.AddProperty(
                "ReconstructionTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("ReconstructionTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<ReconstructionTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reconstructionTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var ringingDateTime = runtimeEntityType.AddProperty(
                "RingingDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("RingingDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<RingingDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            ringingDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            ringingDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var saveIncidentDatetime = runtimeEntityType.AddProperty(
                "SaveIncidentDatetime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("SaveIncidentDatetime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<SaveIncidentDatetime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            saveIncidentDatetime.AddAnnotation("Relational:ColumnType", "datetime");
            saveIncidentDatetime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var savingResponseTime = runtimeEntityType.AddProperty(
                "SavingResponseTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("SavingResponseTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<SavingResponseTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            savingResponseTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var sourceId = runtimeEntityType.AddProperty(
                "SourceId",
                typeof(long?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("SourceId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<SourceId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            sourceId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var startArc = runtimeEntityType.AddProperty(
                "StartArc",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("StartArc", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<StartArc>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            startArc.AddAnnotation("Relational:ColumnName", "StartARC");
            startArc.AddAnnotation("Relational:ColumnType", "datetime");
            startArc.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var totalResponseTime = runtimeEntityType.AddProperty(
                "TotalResponseTime",
                typeof(int?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("TotalResponseTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<TotalResponseTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            totalResponseTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var transferDateTime = runtimeEntityType.AddProperty(
                "TransferDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(SaaedReportOpenIncidentDetail).GetProperty("TransferDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(SaaedReportOpenIncidentDetail).GetField("<TransferDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            transferDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            transferDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "SaaedReportOpenIncidentDetail");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
