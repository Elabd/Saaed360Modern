// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class AspnetPersonalizationPerUserEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.AspnetPersonalizationPerUser",
                typeof(AspnetPersonalizationPerUser),
                baseEntityType,
                propertyCount: 5,
                navigationCount: 2,
                foreignKeyCount: 2,
                namedIndexCount: 2,
                keyCount: 1);

            var id = runtimeEntityType.AddProperty(
                "Id",
                typeof(Guid),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("Id", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<Id>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: new Guid("00000000-0000-0000-0000-000000000000"));
            id.AddAnnotation("Relational:DefaultValueSql", "(newid())");
            id.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var lastUpdatedDate = runtimeEntityType.AddProperty(
                "LastUpdatedDate",
                typeof(DateTime),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("LastUpdatedDate", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<LastUpdatedDate>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));
            lastUpdatedDate.AddAnnotation("Relational:ColumnType", "datetime");
            lastUpdatedDate.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pageSettings = runtimeEntityType.AddProperty(
                "PageSettings",
                typeof(byte[]),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("PageSettings", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<PageSettings>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));
            pageSettings.AddAnnotation("Relational:ColumnType", "image");
            pageSettings.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var pathId = runtimeEntityType.AddProperty(
                "PathId",
                typeof(Guid?),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("PathId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<PathId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            pathId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var userId = runtimeEntityType.AddProperty(
                "UserId",
                typeof(Guid?),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("UserId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<UserId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            userId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { id });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__aspnet_P__3214EC0682A55493");

            var aspnet_PersonalizationPerUser_index1 = runtimeEntityType.AddIndex(
                new[] { pathId, userId },
                name: "aspnet_PersonalizationPerUser_index1",
                unique: true);
            aspnet_PersonalizationPerUser_index1.AddAnnotation("Relational:Filter", null);

            var aspnet_PersonalizationPerUser_ncindex2 = runtimeEntityType.AddIndex(
                new[] { userId, pathId },
                name: "aspnet_PersonalizationPerUser_ncindex2",
                unique: true);
            aspnet_PersonalizationPerUser_ncindex2.AddAnnotation("Relational:Filter", "[UserId] IS NOT NULL AND [PathId] IS NOT NULL");

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("PathId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("PathId") }),
                principalEntityType);

            var path = declaringEntityType.AddNavigation("Path",
                runtimeForeignKey,
                onDependent: true,
                typeof(AspnetPath),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("Path", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<Path>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var aspnetPersonalizationPerUsers = principalEntityType.AddNavigation("AspnetPersonalizationPerUsers",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<AspnetPersonalizationPerUser>),
                propertyInfo: typeof(AspnetPath).GetProperty("AspnetPersonalizationPerUsers", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPath).GetField("<AspnetPersonalizationPerUsers>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__aspnet_Pe__PathI__7F428876");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("UserId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("UserId") }),
                principalEntityType);

            var user = declaringEntityType.AddNavigation("User",
                runtimeForeignKey,
                onDependent: true,
                typeof(AspnetUser),
                propertyInfo: typeof(AspnetPersonalizationPerUser).GetProperty("User", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetPersonalizationPerUser).GetField("<User>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var aspnetPersonalizationPerUsers = principalEntityType.AddNavigation("AspnetPersonalizationPerUsers",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<AspnetPersonalizationPerUser>),
                propertyInfo: typeof(AspnetUser).GetProperty("AspnetPersonalizationPerUsers", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(AspnetUser).GetField("<AspnetPersonalizationPerUsers>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__aspnet_Pe__UserI__0036ACAF");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "aspnet_PersonalizationPerUser");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
