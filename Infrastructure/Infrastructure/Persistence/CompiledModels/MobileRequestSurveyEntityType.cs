// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class MobileRequestSurveyEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.MobileRequestSurvey",
                typeof(MobileRequestSurvey),
                baseEntityType,
                propertyCount: 6,
                navigationCount: 2,
                foreignKeyCount: 2,
                unnamedIndexCount: 2,
                keyCount: 1);

            var mobileRequestSurveyId = runtimeEntityType.AddProperty(
                "MobileRequestSurveyId",
                typeof(long),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("MobileRequestSurveyId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<MobileRequestSurveyId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            mobileRequestSurveyId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var dateCreated = runtimeEntityType.AddProperty(
                "DateCreated",
                typeof(DateTime),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("DateCreated", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<DateCreated>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));
            dateCreated.AddAnnotation("Relational:ColumnType", "datetime");
            dateCreated.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isDeleted = runtimeEntityType.AddProperty(
                "IsDeleted",
                typeof(bool),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("IsDeleted", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<IsDeleted>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: false);
            isDeleted.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mobileRequestAnswerId = runtimeEntityType.AddProperty(
                "MobileRequestAnswerId",
                typeof(int),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("MobileRequestAnswerId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<MobileRequestAnswerId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0);
            mobileRequestAnswerId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var mobileRequestNumber = runtimeEntityType.AddProperty(
                "MobileRequestNumber",
                typeof(long),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("MobileRequestNumber", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<MobileRequestNumber>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                sentinel: 0L);
            mobileRequestNumber.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var userComment = runtimeEntityType.AddProperty(
                "UserComment",
                typeof(string),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("UserComment", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<UserComment>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            userComment.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { mobileRequestSurveyId });
            runtimeEntityType.SetPrimaryKey(key);

            var index = runtimeEntityType.AddIndex(
                new[] { mobileRequestAnswerId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { mobileRequestNumber });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MobileRequestAnswerId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("MobileRequestSurveyAnswerId") }),
                principalEntityType,
                required: true);

            var mobileRequestAnswer = declaringEntityType.AddNavigation("MobileRequestAnswer",
                runtimeForeignKey,
                onDependent: true,
                typeof(MobileRequestSurveryAnswersDim),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("MobileRequestAnswer", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<MobileRequestAnswer>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var mobileRequestSurveys = principalEntityType.AddNavigation("MobileRequestSurveys",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<MobileRequestSurvey>),
                propertyInfo: typeof(MobileRequestSurveryAnswersDim).GetProperty("MobileRequestSurveys", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurveryAnswersDim).GetField("<MobileRequestSurveys>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_MobileRequestSurvey_MobileRequestSurveryAnswersDim");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("MobileRequestNumber") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("RequestNumber") }),
                principalEntityType,
                required: true);

            var mobileRequestNumberNavigation = declaringEntityType.AddNavigation("MobileRequestNumberNavigation",
                runtimeForeignKey,
                onDependent: true,
                typeof(MobileRequest),
                propertyInfo: typeof(MobileRequestSurvey).GetProperty("MobileRequestNumberNavigation", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequestSurvey).GetField("<MobileRequestNumberNavigation>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var mobileRequestSurveys = principalEntityType.AddNavigation("MobileRequestSurveys",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<MobileRequestSurvey>),
                propertyInfo: typeof(MobileRequest).GetProperty("MobileRequestSurveys", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(MobileRequest).GetField("<MobileRequestSurveys>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK_MobileRequestSurvey_MobileRequest");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "MobileRequestSurvey");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
