// <auto-generated />
using System;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class ArcaverageTimeEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.ArcaverageTime",
                typeof(ArcaverageTime),
                baseEntityType,
                propertyCount: 5);

            var average = runtimeEntityType.AddProperty(
                "Average",
                typeof(decimal?),
                propertyInfo: typeof(ArcaverageTime).GetProperty("Average", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ArcaverageTime).GetField("<Average>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            average.AddAnnotation("Relational:ColumnType", "decimal(16, 2)");
            average.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var averageReportsWithin15 = runtimeEntityType.AddProperty(
                "AverageReportsWithin15",
                typeof(decimal?),
                propertyInfo: typeof(ArcaverageTime).GetProperty("AverageReportsWithin15", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ArcaverageTime).GetField("<AverageReportsWithin15>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            averageReportsWithin15.AddAnnotation("Relational:ColumnType", "decimal(16, 2)");
            averageReportsWithin15.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var date = runtimeEntityType.AddProperty(
                "Date",
                typeof(DateOnly?),
                propertyInfo: typeof(ArcaverageTime).GetProperty("Date", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ArcaverageTime).GetField("<Date>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            date.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var totalReports = runtimeEntityType.AddProperty(
                "TotalReports",
                typeof(int?),
                propertyInfo: typeof(ArcaverageTime).GetProperty("TotalReports", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ArcaverageTime).GetField("<TotalReports>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            totalReports.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var totalReportsWithin15 = runtimeEntityType.AddProperty(
                "TotalReportsWithin15",
                typeof(int?),
                propertyInfo: typeof(ArcaverageTime).GetProperty("TotalReportsWithin15", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(ArcaverageTime).GetField("<TotalReportsWithin15>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            totalReportsWithin15.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            return runtimeEntityType;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewDefinitionSql", null);
            runtimeEntityType.AddAnnotation("Relational:ViewName", "ARCAverageTime");
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
