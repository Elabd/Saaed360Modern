// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class JewelryEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.Jewelry",
                typeof(Jewelry),
                baseEntityType,
                propertyCount: 6,
                navigationCount: 6,
                foreignKeyCount: 6,
                unnamedIndexCount: 5,
                keyCount: 1);

            var itemId = runtimeEntityType.AddProperty(
                "ItemId",
                typeof(long),
                propertyInfo: typeof(Jewelry).GetProperty("ItemId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<ItemId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            itemId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var jewelryCaratId = runtimeEntityType.AddProperty(
                "JewelryCaratId",
                typeof(int?),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryCaratId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryCaratId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            jewelryCaratId.AddAnnotation("Relational:DefaultValue", 1);
            jewelryCaratId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var jewelryCategoryId = runtimeEntityType.AddProperty(
                "JewelryCategoryId",
                typeof(int?),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryCategoryId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryCategoryId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            jewelryCategoryId.AddAnnotation("Relational:DefaultValue", 1);
            jewelryCategoryId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var jewelryGenderId = runtimeEntityType.AddProperty(
                "JewelryGenderId",
                typeof(int?),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryGenderId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryGenderId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            jewelryGenderId.AddAnnotation("Relational:DefaultValue", 1);
            jewelryGenderId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var jewelryMetalTypeId = runtimeEntityType.AddProperty(
                "JewelryMetalTypeId",
                typeof(int?),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryMetalTypeId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryMetalTypeId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            jewelryMetalTypeId.AddAnnotation("Relational:DefaultValue", 1);
            jewelryMetalTypeId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var jewelryStyleId = runtimeEntityType.AddProperty(
                "JewelryStyleId",
                typeof(int?),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryStyleId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryStyleId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            jewelryStyleId.AddAnnotation("Relational:DefaultValue", 1);
            jewelryStyleId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { itemId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK_Jewelry_1");

            var index = runtimeEntityType.AddIndex(
                new[] { jewelryCaratId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { jewelryCategoryId });

            var index1 = runtimeEntityType.AddIndex(
                new[] { jewelryGenderId });

            var index2 = runtimeEntityType.AddIndex(
                new[] { jewelryMetalTypeId });

            var index3 = runtimeEntityType.AddIndex(
                new[] { jewelryStyleId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("ItemId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("ItemId") }),
                principalEntityType,
                unique: true,
                required: true);

            var item = declaringEntityType.AddNavigation("Item",
                runtimeForeignKey,
                onDependent: true,
                typeof(Item),
                propertyInfo: typeof(Jewelry).GetProperty("Item", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<Item>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var jewelry = principalEntityType.AddNavigation("Jewelry",
                runtimeForeignKey,
                onDependent: false,
                typeof(Jewelry),
                propertyInfo: typeof(Item).GetProperty("Jewelry", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Item).GetField("<Jewelry>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "Object_Jewelry_FK1");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("JewelryCaratId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("JewelryCaratId") }),
                principalEntityType);

            var jewelryCarat = declaringEntityType.AddNavigation("JewelryCarat",
                runtimeForeignKey,
                onDependent: true,
                typeof(JewelryCaratDim),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryCarat", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryCarat>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var jewelries = principalEntityType.AddNavigation("Jewelries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Jewelry>),
                propertyInfo: typeof(JewelryCaratDim).GetProperty("Jewelries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JewelryCaratDim).GetField("<Jewelries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "JewelryCaratDIM_Jewelry_FK1");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey3(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("JewelryCategoryId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("JewelryCategoryId") }),
                principalEntityType);

            var jewelryCategory = declaringEntityType.AddNavigation("JewelryCategory",
                runtimeForeignKey,
                onDependent: true,
                typeof(JewelryCategoryDim),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryCategory", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryCategory>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var jewelries = principalEntityType.AddNavigation("Jewelries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Jewelry>),
                propertyInfo: typeof(JewelryCategoryDim).GetProperty("Jewelries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JewelryCategoryDim).GetField("<Jewelries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "JewelryTypeDIM_Jewelry_FK1");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey4(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("JewelryGenderId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("JewelryGenderId") }),
                principalEntityType);

            var jewelryGender = declaringEntityType.AddNavigation("JewelryGender",
                runtimeForeignKey,
                onDependent: true,
                typeof(JewelryGenderDim),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryGender", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryGender>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var jewelries = principalEntityType.AddNavigation("Jewelries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Jewelry>),
                propertyInfo: typeof(JewelryGenderDim).GetProperty("Jewelries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JewelryGenderDim).GetField("<Jewelries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "JewelryGenderDIM_Jewelry_FK1");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey5(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("JewelryMetalTypeId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("JewelryMetalTypeId") }),
                principalEntityType);

            var jewelryMetalType = declaringEntityType.AddNavigation("JewelryMetalType",
                runtimeForeignKey,
                onDependent: true,
                typeof(JewelryMetalTypeDim),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryMetalType", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryMetalType>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var jewelries = principalEntityType.AddNavigation("Jewelries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Jewelry>),
                propertyInfo: typeof(JewelryMetalTypeDim).GetProperty("Jewelries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JewelryMetalTypeDim).GetField("<Jewelries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "JewelryMetalTypeDIM_Jewelry_FK1");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey6(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("JewelryStyleId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("JewelryStyleId") }),
                principalEntityType);

            var jewelryStyle = declaringEntityType.AddNavigation("JewelryStyle",
                runtimeForeignKey,
                onDependent: true,
                typeof(JewelryStyleDim),
                propertyInfo: typeof(Jewelry).GetProperty("JewelryStyle", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Jewelry).GetField("<JewelryStyle>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var jewelries = principalEntityType.AddNavigation("Jewelries",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<Jewelry>),
                propertyInfo: typeof(JewelryStyleDim).GetProperty("Jewelries", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(JewelryStyleDim).GetField("<Jewelries>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "JewelryStyleDIM_Jewelry_FK1");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "Jewelry");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
