// <auto-generated />
using System;
using System.Collections.Generic;
using System.Reflection;
using Domain.Entities;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

#pragma warning disable 219, 612, 618
#nullable disable

namespace Infrastructure.Persistence.CompiledModels
{
    [EntityFrameworkInternal]
    public partial class RspReportsVehicleDatumEntityType
    {
        public static RuntimeEntityType Create(RuntimeModel model, RuntimeEntityType baseEntityType = null)
        {
            var runtimeEntityType = model.AddEntityType(
                "Domain.Entities.RspReportsVehicleDatum",
                typeof(RspReportsVehicleDatum),
                baseEntityType,
                propertyCount: 6,
                navigationCount: 2,
                foreignKeyCount: 2,
                unnamedIndexCount: 2,
                keyCount: 1);

            var rspReportVehicleDataId = runtimeEntityType.AddProperty(
                "RspReportVehicleDataId",
                typeof(long),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("RspReportVehicleDataId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<RspReportVehicleDataId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                valueGenerated: ValueGenerated.OnAdd,
                afterSaveBehavior: PropertySaveBehavior.Throw,
                sentinel: 0L);
            rspReportVehicleDataId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            var createdDateTime = runtimeEntityType.AddProperty(
                "CreatedDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("CreatedDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<CreatedDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            createdDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            createdDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var isActive = runtimeEntityType.AddProperty(
                "IsActive",
                typeof(bool?),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("IsActive", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<IsActive>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true,
                valueGenerated: ValueGenerated.OnAdd);
            isActive.AddAnnotation("Relational:DefaultValue", false);
            isActive.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var modifiedDateTime = runtimeEntityType.AddProperty(
                "ModifiedDateTime",
                typeof(DateTime?),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("ModifiedDateTime", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<ModifiedDateTime>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            modifiedDateTime.AddAnnotation("Relational:ColumnType", "datetime");
            modifiedDateTime.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var reportId = runtimeEntityType.AddProperty(
                "ReportId",
                typeof(int?),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("ReportId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<ReportId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            reportId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var rspVehicleDataId = runtimeEntityType.AddProperty(
                "RspVehicleDataId",
                typeof(long?),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("RspVehicleDataId", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<RspVehicleDataId>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                nullable: true);
            rspVehicleDataId.AddAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

            var key = runtimeEntityType.AddKey(
                new[] { rspReportVehicleDataId });
            runtimeEntityType.SetPrimaryKey(key);
            key.AddAnnotation("Relational:Name", "PK__RspRepor__7D13494962A69734");

            var index = runtimeEntityType.AddIndex(
                new[] { reportId });

            var index0 = runtimeEntityType.AddIndex(
                new[] { rspVehicleDataId });

            return runtimeEntityType;
        }

        public static RuntimeForeignKey CreateForeignKey1(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("ReportId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("ReportId") }),
                principalEntityType);

            var report = declaringEntityType.AddNavigation("Report",
                runtimeForeignKey,
                onDependent: true,
                typeof(Report),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("Report", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<Report>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var rspReportsVehicleData = principalEntityType.AddNavigation("RspReportsVehicleData",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<RspReportsVehicleDatum>),
                propertyInfo: typeof(Report).GetProperty("RspReportsVehicleData", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(Report).GetField("<RspReportsVehicleData>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__RspReport__Repor__50BD6F0E");
            return runtimeForeignKey;
        }

        public static RuntimeForeignKey CreateForeignKey2(RuntimeEntityType declaringEntityType, RuntimeEntityType principalEntityType)
        {
            var runtimeForeignKey = declaringEntityType.AddForeignKey(new[] { declaringEntityType.FindProperty("RspVehicleDataId") },
                principalEntityType.FindKey(new[] { principalEntityType.FindProperty("RspVehicleDataId") }),
                principalEntityType);

            var rspVehicleData = declaringEntityType.AddNavigation("RspVehicleData",
                runtimeForeignKey,
                onDependent: true,
                typeof(RspVehicleDatum),
                propertyInfo: typeof(RspReportsVehicleDatum).GetProperty("RspVehicleData", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspReportsVehicleDatum).GetField("<RspVehicleData>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            var rspReportsVehicleData = principalEntityType.AddNavigation("RspReportsVehicleData",
                runtimeForeignKey,
                onDependent: false,
                typeof(ICollection<RspReportsVehicleDatum>),
                propertyInfo: typeof(RspVehicleDatum).GetProperty("RspReportsVehicleData", BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly),
                fieldInfo: typeof(RspVehicleDatum).GetField("<RspReportsVehicleData>k__BackingField", BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly));

            runtimeForeignKey.AddAnnotation("Relational:Name", "FK__RspReport__RspVe__51B19347");
            return runtimeForeignKey;
        }

        public static void CreateAnnotations(RuntimeEntityType runtimeEntityType)
        {
            runtimeEntityType.AddAnnotation("Relational:FunctionName", null);
            runtimeEntityType.AddAnnotation("Relational:Schema", null);
            runtimeEntityType.AddAnnotation("Relational:SqlQuery", null);
            runtimeEntityType.AddAnnotation("Relational:TableName", "RspReportsVehicleData");
            runtimeEntityType.AddAnnotation("Relational:ViewName", null);
            runtimeEntityType.AddAnnotation("Relational:ViewSchema", null);

            Customize(runtimeEntityType);
        }

        static partial void Customize(RuntimeEntityType runtimeEntityType);
    }
}
