<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccidentBasicDetails" xml:space="preserve">
    <value>Accident Basic Details</value>
  </data>
  <data name="AccidentReason" xml:space="preserve">
    <value>Accident Reason</value>
  </data>
  <data name="AccidentReasonComment" xml:space="preserve">
    <value>How Accident Happened Comment</value>
  </data>
  <data name="AccidentType" xml:space="preserve">
    <value>Accident Type</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Career" xml:space="preserve">
    <value>Career</value>
  </data>
  <data name="ChasisNumber" xml:space="preserve">
    <value>Chassis number</value>
  </data>
  <data name="ChemicalMaterial" xml:space="preserve">
    <value>Chemical</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="ClientApproval" xml:space="preserve">
    <value>Caller Approval</value>
  </data>
  <data name="ClientApproval_CheckboxTxt" xml:space="preserve">
    <value>Caller Signature Declaration</value>
  </data>
  <data name="ClientApproval_Txt1" xml:space="preserve">
    <value>إقرار في حال وقوع حادث مروري</value>
  </data>
  <data name="ClientApproval_Txt2" xml:space="preserve">
    <value>اقر انا الموقع ادناه بان البيانات التي أدليت بها صحيحة وذلك نتيجة للحادث المروري الذي وقع لمركبتي وخلافا لذلك أتحمل كافة الإجراءات القانونية المتبعة التي تترتب عليه</value>
  </data>
  <data name="ClientApproval_Txt3" xml:space="preserve">
    <value>Declaration of The occurrence of Simple Traffic Accident</value>
  </data>
  <data name="ClientApproval_Txt4" xml:space="preserve">
    <value>I, the undersigned, declare that the information I provided is correct, as a result of the traffic accident that occurred to my vehicle. Otherwise and as a result, I take full responsibility of all the followed legal procedures</value>
  </data>
  <data name="CollisionPoint" xml:space="preserve">
    <value>Collision Point</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="ConfiscationDocumentType" xml:space="preserve">
    <value>Confiscations Document Type</value>
  </data>
  <data name="ConfiscationLocation" xml:space="preserve">
    <value>Confiscations Location</value>
  </data>
  <data name="CountryOfOrigin" xml:space="preserve">
    <value>Country Of Origin</value>
  </data>
  <data name="CrossingStreet" xml:space="preserve">
    <value>Crossing Street</value>
  </data>
  <data name="DamagedObjectOthersDescription" xml:space="preserve">
    <value>Damaged Object Others Description</value>
  </data>
  <data name="DamagedParts" xml:space="preserve">
    <value>Damaged Parts</value>
  </data>
  <data name="DamagedProperties" xml:space="preserve">
    <value>Damaged Properties</value>
  </data>
  <data name="DamagePropertyTxt" xml:space="preserve">
    <value>Vehicle Damage Description </value>
  </data>
  <data name="DateOfReport" xml:space="preserve">
    <value>Date Of Report</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Dob" xml:space="preserve">
    <value>Date Of Birth</value>
  </data>
  <data name="DriverData" xml:space="preserve">
    <value>Driver Data</value>
  </data>
  <data name="DriverDrikingStatus" xml:space="preserve">
    <value>Driver Drinking Status</value>
  </data>
  <data name="DriverStatus" xml:space="preserve">
    <value>Driver Status</value>
  </data>
  <data name="EasternCoordinates" xml:space="preserve">
    <value>Eastern Coordinates</value>
  </data>
  <data name="EducationLevel" xml:space="preserve">
    <value>Education Level</value>
  </data>
  <data name="Emirate" xml:space="preserve">
    <value>Emirate</value>
  </data>
  <data name="EngineNumber" xml:space="preserve">
    <value>Engine Number</value>
  </data>
  <data name="EscapedStatus" xml:space="preserve">
    <value>Escaped Status</value>
  </data>
  <data name="ExpiryDate" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GeneralNotes" xml:space="preserve">
    <value>General Notes</value>
  </data>
  <data name="GlassColor" xml:space="preserve">
    <value>Glass Color</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="IncidentNumber" xml:space="preserve">
    <value>Incident Number</value>
  </data>
  <data name="InjuryLevel" xml:space="preserve">
    <value>Injury Level</value>
  </data>
  <data name="InjuryType" xml:space="preserve">
    <value>Injury Type</value>
  </data>
  <data name="InsuranceCompany" xml:space="preserve">
    <value>Insurance Company</value>
  </data>
  <data name="InsurancePolicyNumber" xml:space="preserve">
    <value>Insurance Policy Number</value>
  </data>
  <data name="InsuranceType" xml:space="preserve">
    <value>Insurance Type</value>
  </data>
  <data name="Intersection" xml:space="preserve">
    <value>Intersection</value>
  </data>
  <data name="IsHavingLicense" xml:space="preserve">
    <value>Driver Does Not Hold Driving License</value>
  </data>
  <data name="IsPublicPropertyDamaged" xml:space="preserve">
    <value>Is Public Property Damaged</value>
  </data>
  <data name="IssueDate" xml:space="preserve">
    <value>Issue Date</value>
  </data>
  <data name="IsVechileTakenOutOfRoad" xml:space="preserve">
    <value>Vehicle Is Good And Is Not Removed From The Road</value>
  </data>
  <data name="LastRenewDate" xml:space="preserve">
    <value>Last Renew Date</value>
  </data>
  <data name="LicenseCategory" xml:space="preserve">
    <value>License Category</value>
  </data>
  <data name="LicenseNumber" xml:space="preserve">
    <value>License Number</value>
  </data>
  <data name="LicenseSource" xml:space="preserve">
    <value>License Source</value>
  </data>
  <data name="ManufactureYear" xml:space="preserve">
    <value>Manufacture Year</value>
  </data>
  <data name="MobileNumber" xml:space="preserve">
    <value>Mobile Number</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Nationality" xml:space="preserve">
    <value>Nationality</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NorthernCoordinates" xml:space="preserve">
    <value>Northern Coordinates</value>
  </data>
  <data name="Object" xml:space="preserve">
    <value>Damaged Object</value>
  </data>
  <data name="Organisation" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="OrganizationOthersDescription" xml:space="preserve">
    <value>Organization Others Description</value>
  </data>
  <data name="PlateCategory" xml:space="preserve">
    <value>Plate Category</value>
  </data>
  <data name="PlateColor" xml:space="preserve">
    <value>Plate Color</value>
  </data>
  <data name="PlateNumber" xml:space="preserve">
    <value>Plate Number</value>
  </data>
  <data name="PlateSource" xml:space="preserve">
    <value>Plate Source</value>
  </data>
  <data name="PlateType" xml:space="preserve">
    <value>Plate Type</value>
  </data>
  <data name="PoliceApproval" xml:space="preserve">
    <value>Police Approval</value>
  </data>
  <data name="PoliceApproval_CheckboxTxt" xml:space="preserve">
    <value>Police Approval Signing</value>
  </data>
  <data name="PoliceApproval_Txt" xml:space="preserve">
    <value>To use the special incidents office</value>
  </data>
  <data name="PrivateDamagedObjects" xml:space="preserve">
    <value>Private Damaged Objects</value>
  </data>
  <data name="PublicDamagedObjects" xml:space="preserve">
    <value>Public Damaged Objects</value>
  </data>
  <data name="ReasonOfAccident" xml:space="preserve">
    <value>Reason Of Accident</value>
  </data>
  <data name="Reconstruction" xml:space="preserve">
    <value>Reconstruction</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="RenewNumbers" xml:space="preserve">
    <value>Renew Numbers</value>
  </data>
  <data name="ReportNumber" xml:space="preserve">
    <value>Report Number</value>
  </data>
  <data name="ReportStatus" xml:space="preserve">
    <value>Report Status</value>
  </data>
  <data name="ReportType" xml:space="preserve">
    <value>Report Type</value>
  </data>
  <data name="RoadSpeed" xml:space="preserve">
    <value>Road Speed</value>
  </data>
  <data name="RoadSurface" xml:space="preserve">
    <value>Road Surface</value>
  </data>
  <data name="Sector" xml:space="preserve">
    <value>Sector</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="Testimony" xml:space="preserve">
    <value>Testimony</value>
  </data>
  <data name="TimeOfReport" xml:space="preserve">
    <value>Time Of Report</value>
  </data>
  <data name="TrafficCode" xml:space="preserve">
    <value>Traffic Code</value>
  </data>
  <data name="UnifiedNumber" xml:space="preserve">
    <value>Unified Number</value>
  </data>
  <data name="VehicleBrand" xml:space="preserve">
    <value>Vehicle Brand</value>
  </data>
  <data name="VehicleCategory" xml:space="preserve">
    <value>Vehicle Category</value>
  </data>
  <data name="VehicleColor" xml:space="preserve">
    <value>Vehicle Color</value>
  </data>
  <data name="VehicleData" xml:space="preserve">
    <value>Vehicle Data</value>
  </data>
  <data name="VehicleDescription" xml:space="preserve">
    <value>Vehicle Description</value>
  </data>
  <data name="VehicleModel" xml:space="preserve">
    <value>Vehicle Model</value>
  </data>
  <data name="VehicleRole" xml:space="preserve">
    <value>Role In Accident</value>
  </data>
  <data name="VehicleStatus" xml:space="preserve">
    <value>Vehicle Status</value>
  </data>
  <data name="VehicleType" xml:space="preserve">
    <value>Vehicle Type</value>
  </data>
  <data name="Weather" xml:space="preserve">
    <value>Weather</value>
  </data>
  <data name="WeightEmpty" xml:space="preserve">
    <value>Weight Empty</value>
  </data>
  <data name="WeightNonEmpty" xml:space="preserve">
    <value>Weight Non Empty</value>
  </data>
  <data name="WillBeContinuedByTechnicalSupport" xml:space="preserve">
    <value>Report Reconstruction Will Be Continued By Technical Support</value>
  </data>
  <data name="Witnesses" xml:space="preserve">
    <value>Witnesses</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="InjuriesNames" xml:space="preserve">
    <value>Injuries Names</value>
  </data>
  <data name="ReportCode" xml:space="preserve">
    <value>Report Code</value>
  </data>
  <data name="Investigator" xml:space="preserve">
    <value>Investigator</value>
  </data>
  <data name="InvestigatorOfficer" xml:space="preserve">
    <value>Investigator Officer</value>
  </data>
  <data name="SketchedPersonFullName" xml:space="preserve">
    <value>Sketched Person Full Name</value>
  </data>
  <data name="IsAirBagOpened" xml:space="preserve">
    <value>Is Air Bag Opened?</value>
  </data>
</root>